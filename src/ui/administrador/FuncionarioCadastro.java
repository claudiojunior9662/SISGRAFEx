/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.administrador;

import exception.EnvioExcecao;
import ui.login.TelaAutenticacao;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.controle.Controle;

/**
 *
 * @author claud
 */
public class FuncionarioCadastro extends javax.swing.JInternalFrame {

    private static FuncionarioCadastro cadastroFuncionariosNovo;

    public static FuncionarioCadastro getInstancia() {
        return new FuncionarioCadastro();
    }

    /**
     * Creates new form CadastroFuncionariosNovo
     */
    public FuncionarioCadastro() {
        initComponents();
        excluir.setEnabled(false);
        pesquisaTexto.setText("");
        pesquisaComboAux.setEnabled(false);
        resetarSenha.setEnabled(false);
        editar.setEnabled(false);
        ativar.setEnabled(false);
        desativar.setEnabled(false);
        carregaLista(null, null, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nomeAtendente = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        novoLogin = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tipoAtendente = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        codigoAtendente = new javax.swing.JFormattedTextField();
        cadastrar = new javax.swing.JButton();
        novaSenha = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        acessoOrcamentacao = new javax.swing.JCheckBox();
        acessoProducao = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaAtendentes = new javax.swing.JTable();
        excluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        pesquisaCombo = new javax.swing.JComboBox<>();
        pesquisaComboAux = new javax.swing.JComboBox<>();
        pesquisaTexto = new javax.swing.JTextField();
        pesquisar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        acessoExpedicao = new javax.swing.JCheckBox();
        acessoEstoque = new javax.swing.JCheckBox();
        desativar = new javax.swing.JButton();
        ativar = new javax.swing.JButton();
        resetarSenha = new javax.swing.JButton();
        acessoFinanceiro = new javax.swing.JCheckBox();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CADASTRO DE ATENDENTES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setText("NOME:");

        jLabel2.setText("CÓDIGO:");

        jLabel3.setText("NOVO LOGIN:");

        jLabel4.setText("NOVA SENHA:");

        tipoAtendente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "ADMINISTRADOR", "USUÁRIO" }));
        tipoAtendente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoAtendenteItemStateChanged(evt);
            }
        });
        tipoAtendente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoAtendenteActionPerformed(evt);
            }
        });

        jLabel5.setText("TIPO:");

        try {
            codigoAtendente.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("???")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cadastrar.setText("CADASTRAR");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        jLabel7.setText("ACESSO:");

        acessoOrcamentacao.setText("ORCAMENTACAO (ORC)");

        acessoProducao.setText("PRODUCAO (PROD)");
        acessoProducao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acessoProducaoActionPerformed(evt);
            }
        });

        tabelaAtendentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NOME", "CÓDIGO", "LOGIN", "TIPO", "ORC", "PROD", "EXP", "FIN", "EST", "ATIVO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAtendentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAtendentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaAtendentes);

        excluir.setText("EXCLUIR");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setText("PESQUISA POR:");

        pesquisaCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "NOME ATENDENTE", "CÓDIGO ATENDENTE", "LOGIN ATENDENTE", "TIPO ATENDENTE", "ACESSO PRODUÇÃO", "ACESSO ORÇAMENTAÇÃO" }));
        pesquisaCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                pesquisaComboItemStateChanged(evt);
            }
        });

        pesquisaComboAux.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE..." }));

        pesquisar.setText("PESQUISAR");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisaComboAux, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pesquisar)
                .addGap(140, 140, 140))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel6)
                    .addComponent(pesquisaCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisaComboAux, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        editar.setText("EDITAR");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        acessoExpedicao.setText("EXPEDICAO (EXP)");
        acessoExpedicao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acessoExpedicaoActionPerformed(evt);
            }
        });

        acessoEstoque.setText("ESTOQUE(EST)");
        acessoEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acessoEstoqueActionPerformed(evt);
            }
        });

        desativar.setText("DESATIVAR");
        desativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desativarActionPerformed(evt);
            }
        });

        ativar.setText("ATIVAR");
        ativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativarActionPerformed(evt);
            }
        });

        resetarSenha.setText("RESETAR SENHA");
        resetarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetarSenhaActionPerformed(evt);
            }
        });

        acessoFinanceiro.setText("FINANCEIRO (FIN)");
        acessoFinanceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acessoFinanceiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(resetarSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ativar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(desativar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(excluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cadastrar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acessoOrcamentacao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acessoProducao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(acessoExpedicao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acessoFinanceiro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acessoEstoque))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(nomeAtendente))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(codigoAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(novoLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(novaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(tipoAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nomeAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novoLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codigoAtendente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(novaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(acessoOrcamentacao)
                    .addComponent(acessoProducao)
                    .addComponent(acessoExpedicao)
                    .addComponent(acessoEstoque)
                    .addComponent(acessoFinanceiro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cadastrar)
                    .addComponent(excluir)
                    .addComponent(editar)
                    .addComponent(desativar)
                    .addComponent(ativar)
                    .addComponent(resetarSenha))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tipoAtendenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoAtendenteItemStateChanged

    }//GEN-LAST:event_tipoAtendenteItemStateChanged

    private void tipoAtendenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoAtendenteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoAtendenteActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        cadastraEdita(1);
    }//GEN-LAST:event_cadastrarActionPerformed

    private void acessoProducaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acessoProducaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acessoProducaoActionPerformed

    private void tabelaAtendentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAtendentesMouseClicked
        nomeAtendente.setText(tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 0).toString());
        codigoAtendente.setText(tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 1).toString());
        novoLogin.setText(tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 2).toString());
        tipoAtendente.setSelectedItem(tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 3));
        acessoOrcamentacao.setSelected(false);
        acessoProducao.setSelected(false);
        acessoExpedicao.setSelected(false);
        acessoFinanceiro.setSelected(false);
        acessoEstoque.setSelected(false);
        resetarSenha.setEnabled(true);
        editar.setEnabled(true);
        ativar.setEnabled(true);
        desativar.setEnabled(true);
        if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 4).toString().equals("SIM")) {
            acessoOrcamentacao.setSelected(true);
        }
        if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 5).toString().equals("SIM")) {
            acessoProducao.setSelected(true);
        }
        if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 6).toString().equals("SIM")) {
            acessoExpedicao.setSelected(true);
        }
        if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 7).toString().equals("SIM")) {
            acessoFinanceiro.setSelected(true);
        }
        if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 8).toString().equals("SIM")) {
            acessoEstoque.setSelected(true);
        }
    }//GEN-LAST:event_tabelaAtendentesMouseClicked

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        String codAtendente = (String) tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 1);
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "Excluir cliente nº " + codAtendente + "?", "Confirmação de exclusão", dialogButton);
        if (dialogResult == 0) {
            try {
                FuncionarioDAO.excluiFuncionario(codAtendente);
                DefaultTableModel modeloAtendentes = (DefaultTableModel) tabelaAtendentes.getModel();
                modeloAtendentes.setNumRows(0);
                for (FuncionarioBEAN cfBEAN : FuncionarioDAO.carregaLista()) {
                    modeloAtendentes.addRow(new Object[]{
                        cfBEAN.getNomeAtendente(),
                        cfBEAN.getCodigoAtendente(),
                        cfBEAN.getLoginAtendente(),
                        cfBEAN.getSenhaAtendente(),
                        cfBEAN.getTipoAtendente(),
                        cfBEAN.getAcessoOrcamentacao(),
                        cfBEAN.getAcessoProducao()
                    });
                }
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }
        } else {
            return;
        }
        excluir.setEnabled(false);
    }//GEN-LAST:event_excluirActionPerformed

    private void pesquisaComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_pesquisaComboItemStateChanged
        //        SELECIONE...
        //        NOME ATENDENTE
        //        CÓDIGO ATENDENTE
        //        LOGIN ATENDENTE
        //        TIPO ATENDENTE
        //        ACESSO PRODUÇÃO
        //        ACESSO ORÇAMENTAÇÃO
        if (pesquisaCombo.getSelectedItem().toString().equals("TIPO ATENDENTE")) {
            pesquisaComboAux.removeAllItems();
            pesquisaComboAux.addItem("ADMINISTRADOR");
            pesquisaComboAux.addItem("USUÁRIO");
            pesquisaTexto.setEnabled(false);
            pesquisaComboAux.setEnabled(true);
        } else if (pesquisaCombo.getSelectedItem().toString().equals("ACESSO PRODUÇÃO")) {
            pesquisaComboAux.removeAllItems();
            pesquisaComboAux.addItem("SIM");
            pesquisaComboAux.addItem("NÃO");
            pesquisaTexto.setEnabled(false);
            pesquisaComboAux.setEnabled(true);
        } else if (pesquisaCombo.getSelectedItem().toString().equals("ACESSO ORÇAMENTAÇÃO")) {
            pesquisaComboAux.removeAllItems();
            pesquisaComboAux.addItem("SIM");
            pesquisaComboAux.addItem("NÃO");
            pesquisaTexto.setEnabled(false);
            pesquisaComboAux.setEnabled(true);
        } else {
            pesquisaTexto.setEnabled(true);
            pesquisaComboAux.setEnabled(false);
        }
    }//GEN-LAST:event_pesquisaComboItemStateChanged

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
        //        SELECIONE...
        //        NOME ATENDENTE
        //        CÓDIGO ATENDENTE
        //        LOGIN ATENDENTE
        //        TIPO ATENDENTE
        //        ACESSO PRODUÇÃO
        //        ACESSO ORÇAMENTAÇÃO
        if (pesquisaCombo.getSelectedItem().toString().equals("NOME ATENDENTE")) {
            if (pesquisaTexto.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "INSIRA UM NOME DE ATENDENTE NO CAMPO DE TEXTO");
                return;
            } else {
                carregaLista(pesquisaCombo.getSelectedItem().toString(), null, pesquisaTexto.getText());
            }
        }
        if (pesquisaCombo.getSelectedItem().toString().equals("CÓDIGO ATENDENTE")) {
            if (pesquisaTexto.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "INSIRA O CÓDIGO DO ATENDENTE NO CAMPO DE TEXTO");
                return;
            } else {
                carregaLista(pesquisaCombo.getSelectedItem().toString(), null, pesquisaTexto.getText());
            }
        }
        if (pesquisaCombo.getSelectedItem().toString().equals("LOGIN ATENDENTE")) {
            if (pesquisaTexto.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "INSIRA O LOGIN DO ATENDENTE NO CAMPO DE TEXTO");
                return;
            } else {
                carregaLista(pesquisaCombo.getSelectedItem().toString(), null, pesquisaTexto.getText());
            }
        }
        if (pesquisaCombo.getSelectedItem().toString().equals("TIPO ATENDENTE")) {
            carregaLista(pesquisaCombo.getSelectedItem().toString(), pesquisaComboAux.getSelectedItem().toString(), null);
        }
        if (pesquisaCombo.getSelectedItem().toString().equals("ACESSO PRODUÇÃO")) {
            carregaLista(pesquisaCombo.getSelectedItem().toString(), pesquisaComboAux.getSelectedItem().toString(), null);
        }
        if (pesquisaCombo.getSelectedItem().toString().equals("ACESSO ORÇAMENTAÇÃO")) {
            carregaLista(pesquisaCombo.getSelectedItem().toString(), pesquisaComboAux.getSelectedItem().toString(), null);
        }
        pesquisaTexto.setEnabled(false);
        pesquisaComboAux.removeAllItems();
        pesquisaComboAux.addItem("SELECIONE...");
        pesquisaComboAux.setEnabled(false);
    }//GEN-LAST:event_pesquisarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        cadastraEdita(2);
    }//GEN-LAST:event_editarActionPerformed

    private void acessoExpedicaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acessoExpedicaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acessoExpedicaoActionPerformed

    private void desativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desativarActionPerformed
        try {
            FuncionarioDAO.desativaAtivaFuncionario(0, (String) tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 1));
            JOptionPane.showMessageDialog(null, "ATENDENTE DESATIVADO COM SUCESSO", "CONFIRMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
            carregaLista(null, null, null);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_desativarActionPerformed

    private void ativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativarActionPerformed
        try {
            FuncionarioDAO.desativaAtivaFuncionario(1, (String) tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 1));
            JOptionPane.showMessageDialog(null, "ATENDENTE ATIVADO COM SUCESSO", "CONFIRMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
            carregaLista(null, null, null);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_ativarActionPerformed

    private void acessoEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acessoEstoqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acessoEstoqueActionPerformed

    private void acessoFinanceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acessoFinanceiroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_acessoFinanceiroActionPerformed

    private void resetarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetarSenhaActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "A SENHA SERÁ O LOGIN DO ATENDENTE COM LETRAS MINÚSCULAS", "ATENÇÃO!", dialogButton);
        if (dialogResult != 0) {
            return;
        } else {
            if (tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 2).toString().equals("")
                    | tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 2) == null) {
                JOptionPane.showMessageDialog(null, "SELECIONE UM ATENDENTE PARA CONTINUAR", "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }
            try {
                FuncionarioDAO.resetaSenha(tabelaAtendentes.getValueAt(tabelaAtendentes.getSelectedRow(), 2).toString().toLowerCase());
                JOptionPane.showMessageDialog(null, "SENHA RESETADA COM SUCESSO", "CONFIRMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }
        }
    }//GEN-LAST:event_resetarSenhaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox acessoEstoque;
    private javax.swing.JCheckBox acessoExpedicao;
    private javax.swing.JCheckBox acessoFinanceiro;
    private javax.swing.JCheckBox acessoOrcamentacao;
    private javax.swing.JCheckBox acessoProducao;
    private javax.swing.JButton ativar;
    private javax.swing.JButton cadastrar;
    public static javax.swing.JFormattedTextField codigoAtendente;
    private javax.swing.JButton desativar;
    private javax.swing.JButton editar;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public static javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField nomeAtendente;
    public static javax.swing.JPasswordField novaSenha;
    public static javax.swing.JTextField novoLogin;
    private javax.swing.JComboBox<String> pesquisaCombo;
    private javax.swing.JComboBox<String> pesquisaComboAux;
    private javax.swing.JTextField pesquisaTexto;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton resetarSenha;
    private javax.swing.JTable tabelaAtendentes;
    public static javax.swing.JComboBox<String> tipoAtendente;
    // End of variables declaration//GEN-END:variables
 public void limpa() {
        nomeAtendente.setText("");
        novaSenha.setText("");
        codigoAtendente.setText("");
        novoLogin.setText("");
        tipoAtendente.setSelectedIndex(0);
    }

    public void carregaLista(String tipo, String tipoAux, String texto) {
        try {
            DefaultTableModel modeloAtendentes = (DefaultTableModel) tabelaAtendentes.getModel();
            modeloAtendentes.setNumRows(0);

            if (tipo == null && tipoAux == null && texto == null) {
                for (FuncionarioBEAN cadastroFuncionariosBEAN : FuncionarioDAO.carregaLista()) {

                    modeloAtendentes.addRow(new Object[]{
                        cadastroFuncionariosBEAN.getNomeAtendente(),
                        cadastroFuncionariosBEAN.getCodigoAtendente(),
                        cadastroFuncionariosBEAN.getLoginAtendente(),
                        cadastroFuncionariosBEAN.getTipoAtendente(),
                        cadastroFuncionariosBEAN.getAcessoOrcamentacao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoProducao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoExpedicao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoFinanceiro() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoEstoque() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAtivo() == 1 ? "SIM" : "NÃO"

                    });
                }
            } else {
                for (FuncionarioBEAN cadastroFuncionariosBEAN : FuncionarioDAO.retornaPesquisa(tipo, tipoAux, texto)) {

                    modeloAtendentes.addRow(new Object[]{
                        cadastroFuncionariosBEAN.getNomeAtendente(),
                        cadastroFuncionariosBEAN.getCodigoAtendente(),
                        cadastroFuncionariosBEAN.getLoginAtendente(),
                        cadastroFuncionariosBEAN.getTipoAtendente(),
                        cadastroFuncionariosBEAN.getAcessoOrcamentacao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoProducao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoExpedicao() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoFinanceiro() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAcessoEstoque() == 1 ? "SIM" : "NÃO",
                        cadastroFuncionariosBEAN.getAtivo() == 1 ? "SIM" : "NÃO"

                    });
                }
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }

    public void cadastraEdita(Integer funcao) {
        FuncionarioBEAN cadastroFuncionariosBEAN = new FuncionarioBEAN();

        try {
            if (nomeAtendente.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "O CAMPO NOME DEVE SER PREENCHIDO.");
                return;
            } else {
                cadastroFuncionariosBEAN.setNomeAtendente(nomeAtendente.getText().toUpperCase());
            }

            if (novaSenha.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "O CAMPO SENHA DEVE SER PREENCHIDO.");
                return;
            } else {
                cadastroFuncionariosBEAN.setSenha_atendente(novaSenha.getText());
            }

            if (novoLogin.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "O CAMPO LOGIN DEVE SER PREENCHIDO.");
                return;
            }

            cadastroFuncionariosBEAN.setLogin_atendente(novoLogin.getText().toUpperCase());

            if (codigoAtendente.getText().equals(null)) {
                JOptionPane.showMessageDialog(null, "O CAMPO CÓDIGO DEVE SER PREENCHIDO.");
                return;
            }
            if (FuncionarioDAO.verificaCodigo(codigoAtendente.getText()) && funcao != 2) {
                JOptionPane.showMessageDialog(null, "O CÓDIGO DIGITADO JÁ EXISTE.");
                return;
            } else {
                cadastroFuncionariosBEAN.setCodigoAtendente(codigoAtendente.getText().toUpperCase());
            }

            if (tipoAtendente.getSelectedItem().equals("SELECIONE...")) {
                JOptionPane.showMessageDialog(null, "SELECIONE UM TIPO DE ATENDENTE.");
                return;
            } else {
                cadastroFuncionariosBEAN.setTipoAtendente((String) tipoAtendente.getSelectedItem());
            }

            if (acessoOrcamentacao.isSelected()) {
                cadastroFuncionariosBEAN.setAcessoOrcamentacao((byte) 1);
            } else {
                cadastroFuncionariosBEAN.setAcessoOrcamentacao((byte) 0);
            }

            if (acessoProducao.isSelected()) {
                cadastroFuncionariosBEAN.setAcessoProducao((byte) 1);
            } else {
                cadastroFuncionariosBEAN.setAcessoProducao((byte) 0);
            }

            if (acessoExpedicao.isSelected()) {
                cadastroFuncionariosBEAN.setAcessoExpedicao((byte) 1);
            } else {
                cadastroFuncionariosBEAN.setAcessoExpedicao((byte) 0);
            }

            if (acessoFinanceiro.isSelected()) {
                cadastroFuncionariosBEAN.setAcessoFinanceiro((byte) 1);
            } else {
                cadastroFuncionariosBEAN.setAcessoFinanceiro((byte) 0);
            }

            if (acessoEstoque.isSelected()) {
                cadastroFuncionariosBEAN.setAcessoEstoque((byte) 1);
            } else {
                cadastroFuncionariosBEAN.setAcessoEstoque((byte) 0);
            }

            if (funcao == 1) {
                FuncionarioDAO.create(cadastroFuncionariosBEAN);
                JOptionPane.showMessageDialog(null, "USUÁRIO CRIADO COM SUCESSO.", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
            } else {
                FuncionarioDAO.excluiFuncionario(cadastroFuncionariosBEAN.getCodigoAtendente());
                FuncionarioDAO.create(cadastroFuncionariosBEAN);
                JOptionPane.showMessageDialog(null, "USUÁRIO EDITADO COM SUCESSO.", "MENSAGEM", JOptionPane.INFORMATION_MESSAGE);
            }

            TelaAutenticacao.campoUsuario.setText(novoLogin.getText());
            carregaLista(null, null, null);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }

        limpa();
    }

}
