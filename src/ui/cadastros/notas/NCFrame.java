/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.cadastros.notas;

import exception.EnvioExcecao;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.ImageIcon;
import ui.cadastros.contatos.ContatoBEAN;
import ui.cadastros.enderecos.EnderecoBEAN;
import ui.login.TelaAutenticacao;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import ui.cadastros.clientes.ClienteCadastro;
import ui.cadastros.clientes.ClienteDAO;
import ui.controle.Controle;
import ui.principal.GerenteJanelas;

/**
 *
 * @author claud
 */
public class NCFrame extends javax.swing.JInternalFrame {

    public static boolean editar = false;
    public static float valorAntigo = 0f;
    public static int CODIGO_NOTA = 0;

    private JLabel loading;
    private GerenteJanelas gj;

    private static NCFrame notaCreditoNovo;

    public static NCFrame getInstancia(JLabel loading, GerenteJanelas gj) {
        return new NCFrame(loading, gj);
    }

    /**
     * Creates new form NotaCreditoNovo
     */
    public NCFrame(JLabel loading, GerenteJanelas gj) {
        initComponents();
        this.loading = loading;
        this.gj = gj;
        estado1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botaoPesquisarNota = new javax.swing.JButton();
        botaoIncluirNota = new javax.swing.JButton();
        botaoEditarNota = new javax.swing.JButton();
        botaoExcluirNota = new javax.swing.JButton();
        botaoGravarNota = new javax.swing.JButton();
        botaoCancelarNota = new javax.swing.JButton();
        botaoGerarArquivo = new javax.swing.JButton();
        jtabNC = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        numeroNota = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        data = new com.toedter.calendar.JDateChooser();
        serieNota = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        descricaoNota = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        emissor = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        codigoCliente = new javax.swing.JFormattedTextField();
        nomeCliente = new javax.swing.JTextField();
        cnpjCpf = new javax.swing.JTextField();
        nomeContatoCliente = new javax.swing.JTextField();
        telefoneCliente = new javax.swing.JTextField();
        tipoEndereco = new javax.swing.JTextField();
        logadouroCliente = new javax.swing.JTextField();
        bairroCliente = new javax.swing.JTextField();
        ufCliente = new javax.swing.JTextField();
        complementoCliente = new javax.swing.JTextField();
        cidadeCliente = new javax.swing.JTextField();
        cepCliente = new javax.swing.JTextField();
        tipoCliente = new javax.swing.JLabel();
        telefoneCliente2 = new javax.swing.JTextField();
        emailCliente = new javax.swing.JTextField();
        pesquisarCliente = new javax.swing.JButton();
        codigosEnderecos = new javax.swing.JComboBox<>();
        codigosContatos = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jcbFormaPgto = new javax.swing.JComboBox<>();
        jPanel8 = new javax.swing.JPanel();
        valorNota = new javax.swing.JFormattedTextField();
        jpInfoPgtoSigaSiafi = new javax.swing.JPanel();
        jftfCpfUsr = new javax.swing.JFormattedTextField();
        jtfNomeUsr = new javax.swing.JTextField();
        jftfUg = new javax.swing.JFormattedTextField();
        jdcDataLancamento = new com.toedter.calendar.JDateChooser();
        jftfHoraLancamento = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jpInfoPgtoGru = new javax.swing.JPanel();
        jftfCpfUsrGru = new javax.swing.JFormattedTextField();
        jtfNomeUsrGru = new javax.swing.JTextField();
        jftfCodRecGru = new javax.swing.JFormattedTextField();
        jdcDataLancamentoGru = new com.toedter.calendar.JDateChooser();
        jftfHoraLancamentoGru = new javax.swing.JFormattedTextField();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaObservacoes = new javax.swing.JTextArea();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("NOTA DE CRÉDITO");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/notaCredito.png"))); // NOI18N

        botaoPesquisarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        botaoPesquisarNota.setText("PESQUISAR");
        botaoPesquisarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarNotaActionPerformed(evt);
            }
        });

        botaoIncluirNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        botaoIncluirNota.setText("INCLUIR");
        botaoIncluirNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoIncluirNotaActionPerformed(evt);
            }
        });

        botaoEditarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        botaoEditarNota.setText("EDITAR");
        botaoEditarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarNotaActionPerformed(evt);
            }
        });

        botaoExcluirNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        botaoExcluirNota.setText("EXCLUIR");
        botaoExcluirNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirNotaActionPerformed(evt);
            }
        });

        botaoGravarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        botaoGravarNota.setText("GRAVAR");
        botaoGravarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGravarNotaActionPerformed(evt);
            }
        });

        botaoCancelarNota.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        botaoCancelarNota.setText("CANCELAR");
        botaoCancelarNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarNotaActionPerformed(evt);
            }
        });

        botaoGerarArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pdf.png"))); // NOI18N
        botaoGerarArquivo.setText("GERAR ARQUIVO");
        botaoGerarArquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoGerarArquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoPesquisarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botaoIncluirNota, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoEditarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoExcluirNota)
                .addGap(18, 18, 18)
                .addComponent(botaoGravarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoCancelarNota, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botaoGerarArquivo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botaoCancelarNota, botaoEditarNota, botaoExcluirNota, botaoGerarArquivo, botaoGravarNota, botaoIncluirNota, botaoPesquisarNota});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botaoGerarArquivo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoGravarNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botaoPesquisarNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoIncluirNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoEditarNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoExcluirNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botaoCancelarNota, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "NOTA"));

        numeroNota.setBorder(javax.swing.BorderFactory.createTitledBorder("NÚMERO"));
        numeroNota.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jLabel5.setText("1 - NOTA FISCAL, MODELO 1 OU 1-A");
        jLabel5.setBorder(javax.swing.BorderFactory.createTitledBorder("MODELO"));

        data.setBorder(javax.swing.BorderFactory.createTitledBorder("DATA DE LANÇAMENTO"));

        serieNota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2" }));
        serieNota.setBorder(javax.swing.BorderFactory.createTitledBorder("SÉRIE"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(serieNota, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(numeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(serieNota, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {data, jLabel5, numeroNota, serieNota});

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "TIPO DE DOCUMENTO"));

        descricaoNota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 - NOTA FISCAL DE CRÉDITO COM OPERAÇÃO DE ENTRADA" }));
        descricaoNota.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIÇÃO"));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("NORMAL");
        jLabel11.setBorder(javax.swing.BorderFactory.createTitledBorder("FINALIDADE DA EMISSÃO"));

        emissor.setBorder(javax.swing.BorderFactory.createTitledBorder("EMISSOR"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(descricaoNota, 0, 414, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emissor, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emissor, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(descricaoNota, javax.swing.GroupLayout.PREFERRED_SIZE, 40, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {descricaoNota, emissor, jLabel11});

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "CLIENTE"));

        codigoCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓDIGO"));

        nomeCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME"));

        cnpjCpf.setBorder(javax.swing.BorderFactory.createTitledBorder("CNPJ/CPF"));

        nomeContatoCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME DO CONTATO"));

        telefoneCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("TELEFONE PRINCIPAL"));

        tipoEndereco.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO DE ENDEREÇO"));

        logadouroCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("LOGADOURO"));

        bairroCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("BAIRRO"));

        ufCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("UF"));

        complementoCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("COMPLEMENTO"));

        cidadeCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("CIDADE"));

        cepCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("CEP"));

        tipoCliente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        tipoCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO DE PESSOA"));

        telefoneCliente2.setBorder(javax.swing.BorderFactory.createTitledBorder("TELEFONE SECUNDÁRIO"));

        emailCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("EMAIL"));

        pesquisarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        pesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarClienteActionPerformed(evt);
            }
        });

        codigosEnderecos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE..." }));
        codigosEnderecos.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓDIGO DO ENDEREÇO"));
        codigosEnderecos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codigosEnderecosItemStateChanged(evt);
            }
        });

        codigosContatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE..." }));
        codigosContatos.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓDIGO DO CONTATO"));
        codigosContatos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codigosContatosItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pesquisarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cnpjCpf))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(codigosEnderecos, 0, 150, Short.MAX_VALUE)
                            .addComponent(codigosContatos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(nomeContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(telefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(telefoneCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addComponent(tipoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(logadouroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailCliente)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(bairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cidadeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ufCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(cepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(complementoCliente)))
                .addGap(64, 64, 64))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {telefoneCliente, telefoneCliente2});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codigoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pesquisarCliente)
                    .addComponent(tipoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cnpjCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigosContatos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nomeContatoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(telefoneCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigosEnderecos, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tipoEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bairroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cidadeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(logadouroCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ufCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cepCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(complementoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cnpjCpf, codigoCliente, codigosContatos, codigosEnderecos, nomeCliente, pesquisarCliente, tipoCliente});

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtabNC.addTab("DADOS DA NOTA", new javax.swing.ImageIcon(getClass().getResource("/icones/notaCredito.png")), jPanel2); // NOI18N

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "FORMA DE PAGAMENTO"));

        jcbFormaPgto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "1 - SIGA/SIAFI", "2 - TRANSFERÊNCIA ENTRE CONTAS", "3 - NOTA DE CRÉDITO", "4 - GRU" }));
        jcbFormaPgto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbFormaPgtoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbFormaPgto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jcbFormaPgto, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "VALORES"));

        valorNota.setBorder(javax.swing.BorderFactory.createTitledBorder("VALOR DA NOTA (R$)"));
        valorNota.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valorNota, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(valorNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpInfoPgtoSigaSiafi.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "* INFORMAÇÕES DE PAGAMENTO SIGA/SIAFI"));
        jpInfoPgtoSigaSiafi.setVisible(false);

        jftfCpfUsr.setBorder(javax.swing.BorderFactory.createTitledBorder("CPF DO USUÁRIO"));
        try {
            jftfCpfUsr.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCpfUsr.setToolTipText("");
        jftfCpfUsr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftfCpfUsrFocusLost(evt);
            }
        });

        jtfNomeUsr.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME DO USUÁRIO"));

        jftfUg.setBorder(javax.swing.BorderFactory.createTitledBorder("UG"));
        try {
            jftfUg.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfUg.setToolTipText("CÓDIGO DE 6 DÍGITOS");

        jdcDataLancamento.setBorder(javax.swing.BorderFactory.createTitledBorder("DATA DE LANÇAMENTO"));

        jftfHoraLancamento.setBorder(javax.swing.BorderFactory.createTitledBorder("HORA DO LANÇAMENTO"));
        try {
            jftfHoraLancamento.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/interrogacao.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInfoPgtoSigaSiafiLayout = new javax.swing.GroupLayout(jpInfoPgtoSigaSiafi);
        jpInfoPgtoSigaSiafi.setLayout(jpInfoPgtoSigaSiafiLayout);
        jpInfoPgtoSigaSiafiLayout.setHorizontalGroup(
            jpInfoPgtoSigaSiafiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoPgtoSigaSiafiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                        .addComponent(jftfCpfUsr, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfNomeUsr, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jftfUg, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jdcDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jftfHoraLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        jpInfoPgtoSigaSiafiLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jdcDataLancamento, jftfUg});

        jpInfoPgtoSigaSiafiLayout.setVerticalGroup(
            jpInfoPgtoSigaSiafiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoPgtoSigaSiafiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftfHoraLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcDataLancamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfUg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                .addGroup(jpInfoPgtoSigaSiafiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jtfNomeUsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpInfoPgtoSigaSiafiLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jftfCpfUsr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );

        jpInfoPgtoGru.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "* INFORMAÇÕES DE PAGAMENTO GRU"));
        jpInfoPgtoGru.setVisible(false);

        jftfCpfUsrGru.setBorder(javax.swing.BorderFactory.createTitledBorder("CPF DO USUÁRIO"));
        try {
            jftfCpfUsrGru.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCpfUsrGru.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftfCpfUsrGruFocusLost(evt);
            }
        });

        jtfNomeUsrGru.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME DO USUÁRIO"));

        jftfCodRecGru.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓDIGO DO RECOLHIMENTO"));
        try {
            jftfCodRecGru.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftfCodRecGru.setToolTipText("CÓDIGO DE 6 DÍGITOS");

        jdcDataLancamentoGru.setBorder(javax.swing.BorderFactory.createTitledBorder("DATA DE LANÇAMENTO"));

        jftfHoraLancamentoGru.setBorder(javax.swing.BorderFactory.createTitledBorder("HORA DO LANÇAMENTO"));
        try {
            jftfHoraLancamentoGru.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jpInfoPgtoGruLayout = new javax.swing.GroupLayout(jpInfoPgtoGru);
        jpInfoPgtoGru.setLayout(jpInfoPgtoGruLayout);
        jpInfoPgtoGruLayout.setHorizontalGroup(
            jpInfoPgtoGruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoPgtoGruLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jftfCpfUsrGru, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jtfNomeUsrGru)
                .addGap(18, 18, 18)
                .addComponent(jftfCodRecGru, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jdcDataLancamentoGru, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jftfHoraLancamentoGru, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpInfoPgtoGruLayout.setVerticalGroup(
            jpInfoPgtoGruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoPgtoGruLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoPgtoGruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jftfHoraLancamentoGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jdcDataLancamentoGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpInfoPgtoGruLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jftfCpfUsrGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jtfNomeUsrGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jftfCodRecGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpInfoPgtoSigaSiafi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jpInfoPgtoGru, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpInfoPgtoSigaSiafi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpInfoPgtoGru, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(106, Short.MAX_VALUE))
        );

        jtabNC.addTab("DADOS DE PAGAMENTO", new javax.swing.ImageIcon(getClass().getResource("/icones/creditoClientes.png")), jPanel6); // NOI18N

        areaObservacoes.setColumns(20);
        areaObservacoes.setRows(5);
        jScrollPane1.setViewportView(areaObservacoes);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1194, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 415, Short.MAX_VALUE)
                .addContainerGap())
        );

        jtabNC.addTab("OBSERVAÇÕES", new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png")), jPanel9); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtabNC)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtabNC, javax.swing.GroupLayout.PREFERRED_SIZE, 472, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoPesquisarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarNotaActionPerformed
        gj.abrirJanelas(NotaPesquisa.getInstancia(loading, (byte) 2), "CONSULTA POR NOTAS");
    }//GEN-LAST:event_botaoPesquisarNotaActionPerformed

    private void botaoIncluirNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoIncluirNotaActionPerformed
        estadoIncluir();
    }//GEN-LAST:event_botaoIncluirNotaActionPerformed

    private void botaoEditarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarNotaActionPerformed
        estadoEditar();
        editar = true;
        valorAntigo = Float.valueOf(valorNota.getValue().toString());
    }//GEN-LAST:event_botaoEditarNotaActionPerformed

    private void botaoExcluirNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirNotaActionPerformed
        /**
         * Solicita a senha, corrige o crédito e exclui a nota
         */
        JLabel label = new JLabel("DIGITE A SENHA");
        JPasswordField jpf = new JPasswordField();
        int retorno = JOptionPane.showConfirmDialog(null, new Object[]{label, jpf}, "SENHA MESTRA:", JOptionPane.OK_CANCEL_OPTION);
        if (retorno != 0 || !String.valueOf(jpf.getPassword()).matches("Financeiro00915@")) {
            JOptionPane.showMessageDialog(null, "SENHA INCORRETA!");
            return;
        } else {
            try {
                valorAntigo = Float.valueOf(valorNota.getText().replace(",", "."));
                CODIGO_NOTA = Integer.valueOf(numeroNota.getValue().toString());
                ClienteDAO.corrigeCredito((int) codigoCliente.getValue(),
                        tipoCliente.getText().equals("PESSOA FÍSICA") ? (byte) 1 : (byte) 2,
                        valorAntigo,
                        (byte) 2);

                switch (jcbFormaPgto.getSelectedIndex()) {
                    case 1:
                        NotaDAO.excluiLanc(CODIGO_NOTA);
                        break;
                    case 4:
                        NotaDAO.excluiLancGru(CODIGO_NOTA);
                        break;
                }
                NotaDAO.excluiNota(CODIGO_NOTA);
                JOptionPane.showMessageDialog(null, "A NOTA DE CRÉDITO " + CODIGO_NOTA + " FOI EXCLUÍDA COM SUCESSO."
                        + "\nO VALOR DE R$ " + valorAntigo + " FOI DESCONTADO DO CRÉDITO DO CLIENTE.");
                estadoPosExcluir();
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }
        }
    }//GEN-LAST:event_botaoExcluirNotaActionPerformed

    private void botaoGravarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGravarNotaActionPerformed
        new Thread() {
            @Override
            public void run() {

                loading.setVisible(true);
                loading.setText("GRAVANDO...");

                try {
                    NotaBEAN nota = new NotaBEAN();
                    LancSigaSiafi lanc = null;
                    LancGru lancGru = null;

                    if (editar) {
                        CODIGO_NOTA = Integer.valueOf(numeroNota.getValue().toString());
                    } else {
                        CODIGO_NOTA = NotaDAO.retornaUltimaNota() + 1;
                    }

                    nota.setCod(CODIGO_NOTA);

                    /**
                     * Verificação de erros
                     */
                    if (data.getDate() == null) {
                        JOptionPane.showMessageDialog(null, "SELECIONE A DATA");
                        loading.setVisible(false);
                        return;
                    }
                    if (codigoCliente.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "SELECIONE UM CLIENTE");
                        loading.setVisible(false);
                        return;
                    }
                    if (codigosEnderecos.getSelectedItem().toString().equals("SELECIONE...")) {
                        JOptionPane.showMessageDialog(null, "SELECIONE UM ENDEREÇO");
                        loading.setVisible(false);
                        return;
                    }
                    if (codigosContatos.getSelectedItem().toString().equals("SELECIONE...")) {
                        JOptionPane.showMessageDialog(null, "SELECIONE UM CONTATO");
                        loading.setVisible(false);
                        return;
                    }
                    if (valorNota.getText().equals("")) {
                        JOptionPane.showMessageDialog(null, "DIGITE O VALOR DA NOTA");
                        loading.setVisible(false);
                        return;
                    }

                    if (jcbFormaPgto.getSelectedIndex() == 1) {
                        if (jftfCpfUsr.getText().replace(".", "").replace("-", "").isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O CPF DO USUÁRIO QUE FEZ O LANÇAMENTO",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jtfNomeUsr.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O NOME DO USUÁRIO QUE FEZ O LANÇAMENTO",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jftfUg.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O NÚMERO DA UG QUE FEZ O LANÇAMENTO",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jdcDataLancamento.getDate() == null) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE A DATA DO LANÇAMENTO",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jftfHoraLancamento.getText().replace(":", "").isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE A HORA DO LANÇAMENTO",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }

                        Timestamp data = new Timestamp(jdcDataLancamento.getDate().getTime());
                        data.setHours(Integer.valueOf(jftfHoraLancamento.getText().substring(0, 2)));
                        data.setMinutes(Integer.valueOf(jftfHoraLancamento.getText().substring(3, 5)));
                        lanc = new LancSigaSiafi(CODIGO_NOTA,
                                jftfCpfUsr.getText(),
                                jtfNomeUsr.getText().toUpperCase(),
                                Integer.valueOf(jftfUg.getText()),
                                data);
                        int retorno = NotaDAO.verificaLancRep(lanc);
                        if (retorno != 0) {
                            JOptionPane.showMessageDialog(null,
                                    "A NOTA Nº " + retorno + " JÁ FOI LANÇADA PARA ESTE EMPENHO.",
                                    "ATENÇÃO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }

                    } else if (jcbFormaPgto.getSelectedIndex() == 4) {
                        if (jftfCpfUsrGru.getText().replace(".", "").replace("-", "").isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O CPF DO USUÁRIO QUE FEZ O PAGAMENTO DA GRU",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jtfNomeUsrGru.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O NOME DO USUÁRIO QUE FEZ O PAGAMENTO DA GRU",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jftfCodRecGru.getText().isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE O NÚMERO DO CÓDIGO DE RECOLHIMENTO DA GRU",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jdcDataLancamentoGru.getDate() == null) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE A DATA DO LANÇAMENTO DA GRU",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jftfHoraLancamentoGru.getText().replace(":", "").isEmpty()) {
                            JOptionPane.showMessageDialog(null,
                                    "DIGITE A HORA DO LANÇAMENTO DA GRU",
                                    "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }

                        Timestamp data = new Timestamp(jdcDataLancamentoGru.getDate().getTime());
                        data.setHours(Integer.valueOf(jftfHoraLancamentoGru.getText().substring(0, 2)));
                        data.setMinutes(Integer.valueOf(jftfHoraLancamentoGru.getText().substring(3, 5)));
                        lancGru = new LancGru(CODIGO_NOTA,
                                jftfCpfUsrGru.getText(),
                                jtfNomeUsrGru.getText().toUpperCase(),
                                Integer.valueOf(jftfCodRecGru.getText().replace("-", "")),
                                data);
                        int retorno = NotaDAO.verificaLancRepGru(lancGru);
                        if (retorno != 0) {
                            JOptionPane.showMessageDialog(null,
                                    "A NOTA Nº " + retorno + " JÁ FOI LANÇADA PARA ESTA GRU.",
                                    "ATENÇÃO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                    }

                    /**
                     * Preenche bean e código
                     */
                    nota.setSerie(Integer.valueOf(serieNota.getSelectedItem().toString()));
                    String auxS = descricaoNota.getSelectedItem().toString();
                    auxS = auxS.substring(0, 1);
                    nota.setTipo(Integer.valueOf(auxS));
                    nota.setFormaPagamento(jcbFormaPgto.getSelectedIndex());
                    nota.setCodEmissor(TelaAutenticacao.getUsrLogado().getCodigo());
                    nota.setCodigoCliente((int) codigoCliente.getValue());
                    nota.setCodEndereco(Integer.valueOf(codigosEnderecos.getSelectedItem().toString()));
                    nota.setCodContato(Integer.valueOf(codigosContatos.getSelectedItem().toString()));
                    if (tipoCliente.getText().equals("PESSOA FÍSICA")) {
                        nota.setTipoPessoa(1);
                    } else if (tipoCliente.getText().equals("PESSOA JURÍDICA")) {
                        nota.setTipoPessoa(2);
                    }
                    auxS = valorNota.getText().replace(",", ".");
                    nota.setValor(Float.valueOf(auxS));
                    nota.setData(Controle.dataPadrao.format(data.getDate()));
                    if (areaObservacoes.getText() == "") {
                        nota.setObservacoes(null);
                    } else {
                        nota.setObservacoes(areaObservacoes.getText());
                    }

                    /**
                     * Grava no banco
                     */
                    if (editar == true) {
                        JLabel label = new JLabel("DIGITE A SENHA");
                        JPasswordField jpf = new JPasswordField();
                        int retorno = JOptionPane.showConfirmDialog(null, new Object[]{label, jpf}, "SENHA MESTRA:", JOptionPane.OK_CANCEL_OPTION);
                        String resposta = String.valueOf(jpf.getPassword());
                        if (retorno != 0 || resposta.matches("Financeiro00915@") == false) {
                            JOptionPane.showMessageDialog(null, "SENHA INCORRETA!");
                            loading.setVisible(false);
                            return;
                        } else {
                            float valor = Float.valueOf(valorNota.getText().replace(",", "."));
                            int tipoPessoa = 0;
                            if (tipoCliente.getText().equals("PESSOA FÍSICA")) {
                                tipoPessoa = 1;
                            } else {
                                tipoPessoa = 2;
                            }
                            CODIGO_NOTA = Integer.valueOf(numeroNota.getValue().toString());
                            ClienteDAO.corrigeCredito((int) codigoCliente.getValue(),
                                    (byte) tipoPessoa,
                                    valorAntigo,
                                    (byte) 2);
                            NotaDAO.atualizaNC(nota);
                        }
                    } else {
                        NotaDAO.gravaNotaCredito(nota);
                    }

                    /**
                     * Grava lançamentos siafi ou gru, se for o caso ,e, se não
                     * exclui se existir
                     */
                    switch (jcbFormaPgto.getSelectedIndex()) {
                        case 1:
                            if (!editar) {
                                NotaDAO.criaLanc(lanc);
                            } else {
                                NotaDAO.atualizaLanc(lanc);
                            }

                            if (NotaDAO.verificaLancGru(CODIGO_NOTA)) {
                                NotaDAO.excluiLancGru(CODIGO_NOTA);
                            }
                            break;
                        case 4:
                            if (!editar) {
                                NotaDAO.criaLancGru(lancGru);
                            } else {
                                NotaDAO.atualizaLancGru(lancGru);
                            }

                            if (NotaDAO.verificaLanc(CODIGO_NOTA)) {
                                NotaDAO.excluiLanc(CODIGO_NOTA);
                            }
                            break;
                        default:
                            if (NotaDAO.verificaLanc(CODIGO_NOTA)) {
                                NotaDAO.excluiLanc(CODIGO_NOTA);
                            }

                            if (NotaDAO.verificaLancGru(CODIGO_NOTA)) {
                                NotaDAO.excluiLancGru(CODIGO_NOTA);
                            }
                            break;
                    }

                    /**
                     * Atualiza o crédito to cliente
                     */
                    ClienteDAO.corrigeCredito(nota.getCodCliente(),
                            (byte) nota.getTipoPessoa(),
                            nota.getValor(),
                            (byte) 1);

                    /**
                     * Exibe mensagem de conclusão
                     */
                    JOptionPane.showMessageDialog(null,
                            "NOTA DE CRÉDITO Nº "
                            + CODIGO_NOTA + " "
                            + "GRAVADA COM SUCESSO!");

                    /**
                     * Atualiza o estado da tela
                     */
                    numeroNota.setValue(CODIGO_NOTA);
                    estadoGravar();
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }

                loading.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_botaoGravarNotaActionPerformed

    private void botaoCancelarNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarNotaActionPerformed
        estadoCancelar();
    }//GEN-LAST:event_botaoCancelarNotaActionPerformed

    private void botaoGerarArquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoGerarArquivoActionPerformed
        if (numeroNota.getText() != "") {
            NotaBEAN notaBEAN = new NotaBEAN();
            notaBEAN.geraNotaCredito(Integer.parseInt(numeroNota.getText()),
                    jcbFormaPgto.getSelectedItem().toString());
        }
    }//GEN-LAST:event_botaoGerarArquivoActionPerformed

    private void pesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarClienteActionPerformed
        gj.abrirJanelas(ClienteCadastro.getInstancia(loading, gj, (byte) 3), "CADASTRO DE CLIENTES");
    }//GEN-LAST:event_pesquisarClienteActionPerformed

    private void codigosEnderecosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codigosEnderecosItemStateChanged
        if (codigosEnderecos.getSelectedItem() != null) {
            if (codigosEnderecos.getSelectedItem().toString() != "SELECIONE...") {
                try {
                    for (EnderecoBEAN bean : NotaDAO.retornaEndereco(
                            Integer.valueOf(codigosEnderecos.getSelectedItem().toString()))) {
                        tipoEndereco.setText(bean.getTipoEndereco());
                        bairroCliente.setText(bean.getBairro());
                        cidadeCliente.setText(bean.getCidade());
                        ufCliente.setText(bean.getUf());
                        complementoCliente.setText(bean.getComplemento());
                        cepCliente.setText(EnderecoBEAN.retornaCepFormatado(bean.getCep().toString()));
                        logadouroCliente.setText(bean.getLogadouro());

                    }
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
            }
        }
    }//GEN-LAST:event_codigosEnderecosItemStateChanged

    private void codigosContatosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codigosContatosItemStateChanged
        if (codigosContatos.getSelectedItem() != null) {
            if (codigosContatos.getSelectedItem().toString() != "SELECIONE...") {
                try {
                    for (ContatoBEAN contato : NotaDAO.retornaContato(
                            Integer.valueOf(codigosContatos.getSelectedItem().toString()))) {
                        nomeContatoCliente.setText(contato.getNomeContato());
                        telefoneCliente.setText(contato.getTelefone());
                        telefoneCliente2.setText(contato.getTelefone2());
                        emailCliente.setText(contato.getEmail());
                    }
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
            }
        }
    }//GEN-LAST:event_codigosContatosItemStateChanged

    private void jftfCpfUsrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftfCpfUsrFocusLost
        String cpfAux = jftfCpfUsr.getText().replace(".", "").replace("-", "");
        if (!cpfAux.equals("")) {
            if (!ClienteCadastro.verificaCpf(cpfAux)) {
                JOptionPane.showMessageDialog(null, "O 'CPF' DIGITADO NÃO É VÁLIDO!", "ERRO DE VALIDAÇÃO", 0);
                jftfCpfUsr.setText("");
            }
        }
    }//GEN-LAST:event_jftfCpfUsrFocusLost

    private void jcbFormaPgtoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbFormaPgtoItemStateChanged
        if (jcbFormaPgto.getSelectedIndex() == 1) {
            jpInfoPgtoSigaSiafi.setVisible(true);
            jpInfoPgtoGru.setVisible(false);
        } else if (jcbFormaPgto.getSelectedIndex() == 4) {
            jpInfoPgtoGru.setVisible(true);
            jpInfoPgtoSigaSiafi.setVisible(false);
        } else {
            jpInfoPgtoGru.setVisible(false);
            jpInfoPgtoSigaSiafi.setVisible(false);
        }
    }//GEN-LAST:event_jcbFormaPgtoItemStateChanged

    private void jftfCpfUsrGruFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftfCpfUsrGruFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jftfCpfUsrGruFocusLost

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ImageIcon imagem = new ImageIcon(this.getClass().getResource("/icones/dicaSigaSiafi.jpeg"));
        JOptionPane.showMessageDialog(null,
                "",
                "",
                JOptionPane.INFORMATION_MESSAGE,
                imagem);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea areaObservacoes;
    public static javax.swing.JTextField bairroCliente;
    public static javax.swing.JButton botaoCancelarNota;
    public static javax.swing.JButton botaoEditarNota;
    public static javax.swing.JButton botaoExcluirNota;
    public static javax.swing.JButton botaoGerarArquivo;
    public static javax.swing.JButton botaoGravarNota;
    public static javax.swing.JButton botaoIncluirNota;
    public static javax.swing.JButton botaoPesquisarNota;
    public static javax.swing.JTextField cepCliente;
    public static javax.swing.JTextField cidadeCliente;
    public static javax.swing.JTextField cnpjCpf;
    public static javax.swing.JFormattedTextField codigoCliente;
    public static javax.swing.JComboBox<String> codigosContatos;
    public static javax.swing.JComboBox<String> codigosEnderecos;
    public static javax.swing.JTextField complementoCliente;
    public static com.toedter.calendar.JDateChooser data;
    public static javax.swing.JComboBox<String> descricaoNota;
    public static javax.swing.JTextField emailCliente;
    public static javax.swing.JLabel emissor;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JComboBox<String> jcbFormaPgto;
    public static com.toedter.calendar.JDateChooser jdcDataLancamento;
    public static com.toedter.calendar.JDateChooser jdcDataLancamentoGru;
    public static javax.swing.JFormattedTextField jftfCodRecGru;
    public static javax.swing.JFormattedTextField jftfCpfUsr;
    public static javax.swing.JFormattedTextField jftfCpfUsrGru;
    public static javax.swing.JFormattedTextField jftfHoraLancamento;
    public static javax.swing.JFormattedTextField jftfHoraLancamentoGru;
    public static javax.swing.JFormattedTextField jftfUg;
    public static javax.swing.JPanel jpInfoPgtoGru;
    public static javax.swing.JPanel jpInfoPgtoSigaSiafi;
    public static javax.swing.JTabbedPane jtabNC;
    public static javax.swing.JTextField jtfNomeUsr;
    public static javax.swing.JTextField jtfNomeUsrGru;
    public static javax.swing.JTextField logadouroCliente;
    public static javax.swing.JTextField nomeCliente;
    public static javax.swing.JTextField nomeContatoCliente;
    public static javax.swing.JFormattedTextField numeroNota;
    public static javax.swing.JButton pesquisarCliente;
    public static javax.swing.JComboBox<String> serieNota;
    public static javax.swing.JTextField telefoneCliente;
    public static javax.swing.JTextField telefoneCliente2;
    public static javax.swing.JLabel tipoCliente;
    public static javax.swing.JTextField tipoEndereco;
    public static javax.swing.JTextField ufCliente;
    public static javax.swing.JFormattedTextField valorNota;
    // End of variables declaration//GEN-END:variables

    //ESTADOS DA UI-------------------------------------------------------------
    public void estado1() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(true);
        botaoIncluirNota.setEnabled(true);
        botaoEditarNota.setEnabled(false);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(false);
        botaoCancelarNota.setEnabled(false);
        botaoGerarArquivo.setEnabled(false);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEditable(false);
        numeroNota.setEditable(false);
        data.setEnabled(false);
        descricaoNota.setEditable(false);
        codigoCliente.setEditable(false);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        pesquisarCliente.setEnabled(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(false);
        valorNota.setEditable(false);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(false);
    }

    public static void estadoPosPesquisar() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(false);
        botaoIncluirNota.setEnabled(false);
        botaoEditarNota.setEnabled(true);
        botaoExcluirNota.setEnabled(true);
        botaoGravarNota.setEnabled(false);
        botaoCancelarNota.setEnabled(true);
        botaoGerarArquivo.setEnabled(true);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEditable(false);
        numeroNota.setEditable(false);
        data.setEnabled(false);
        descricaoNota.setEditable(false);
        codigoCliente.setEditable(false);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        pesquisarCliente.setEnabled(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(false);
        valorNota.setEditable(false);
        //SIGA-SIAFI------------------------------------------------------------
        jftfCpfUsr.setEditable(false);
        jtfNomeUsr.setEditable(false);
        jftfUg.setEditable(false);
        jdcDataLancamento.setEnabled(false);
        jftfHoraLancamento.setEditable(false);
        //GRU-------------------------------------------------------------------
        jftfCpfUsrGru.setEditable(false);
        jtfNomeUsrGru.setEditable(false);
        jftfCodRecGru.setEditable(false);
        jdcDataLancamentoGru.setEnabled(false);
        jftfHoraLancamentoGru.setEditable(false);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(false);
        //SELECIONA A ABA PRINCIPAL---------------------------------------------
        jtabNC.setSelectedIndex(0);
    }

    public void estadoEditar() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(false);
        botaoIncluirNota.setEnabled(false);
        botaoEditarNota.setEnabled(false);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(true);
        botaoCancelarNota.setEnabled(true);
        botaoGerarArquivo.setEnabled(false);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEditable(false);
        numeroNota.setEditable(false);
        if (TelaAutenticacao.getUsrLogado().getTipo().equals("ADMINISTRADOR")) {
            data.setEnabled(true);
        }
        descricaoNota.setEditable(true);
        codigoCliente.setEditable(false);
        pesquisarCliente.setEnabled(true);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(true);
        valorNota.setEditable(true);
        jcbFormaPgto.setEnabled(true);
        jftfCpfUsr.setEditable(true);
        jtfNomeUsr.setEditable(true);
        jftfUg.setEditable(true);
        jdcDataLancamento.setEnabled(true);
        jftfHoraLancamento.setEditable(true);
        
        jftfCpfUsrGru.setEditable(true);
        jtfNomeUsrGru.setEditable(true);
        jftfCodRecGru.setEditable(true);
        jdcDataLancamentoGru.setEnabled(true);
        jftfHoraLancamentoGru.setEditable(true);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(true);
    }

    public void estadoIncluir() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(false);
        botaoIncluirNota.setEnabled(false);
        botaoEditarNota.setEnabled(false);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(true);
        botaoCancelarNota.setEnabled(true);
        botaoGerarArquivo.setEnabled(false);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEnabled(false);
        numeroNota.setEditable(false);
        if (TelaAutenticacao.getUsrLogado().getTipo().equals("ADMINISTRADOR")) {
            data.setEnabled(true);
        }
        data.setDate(new Date());
        descricaoNota.setEnabled(true);
        codigoCliente.setEditable(false);
        pesquisarCliente.setEnabled(true);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(true);
        jftfCpfUsr.setEditable(true);
        jtfNomeUsr.setEditable(true);
        jftfUg.setEditable(true);
        jdcDataLancamento.setEnabled(true);
        jftfHoraLancamento.setEditable(true);
        
        jftfCpfUsrGru.setEditable(true);
        jtfNomeUsrGru.setEditable(true);
        jftfCodRecGru.setEditable(true);
        jdcDataLancamentoGru.setEnabled(true);
        jftfHoraLancamentoGru.setEditable(true);
        valorNota.setEditable(true);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(true);
        editar = false;
    }

    public void estadoGravar() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(false);
        botaoIncluirNota.setEnabled(false);
        botaoEditarNota.setEnabled(true);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(false);
        botaoCancelarNota.setEnabled(true);
        botaoGerarArquivo.setEnabled(true);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEnabled(false);
        numeroNota.setEditable(false);
        data.setEnabled(false);
        descricaoNota.setEnabled(false);
        codigoCliente.setEditable(false);
        pesquisarCliente.setEnabled(false);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(false);
        //SIGA-SIAFI------------------------------------------------------------
        jftfCpfUsr.setEditable(false);
        jtfNomeUsr.setEditable(false);
        jftfUg.setEditable(false);
        jdcDataLancamento.setEnabled(false);
        jftfHoraLancamento.setEditable(false);
        //GRU-------------------------------------------------------------------
        jftfCpfUsrGru.setEditable(false);
        jtfNomeUsrGru.setEditable(false);
        jftfCodRecGru.setEditable(false);
        jdcDataLancamentoGru.setEnabled(false);
        jftfHoraLancamentoGru.setEditable(false);
        valorNota.setEditable(false);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(false);
    }

    public void estadoCancelar() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(true);
        botaoIncluirNota.setEnabled(true);
        botaoEditarNota.setEnabled(false);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(false);
        botaoCancelarNota.setEnabled(false);
        botaoGerarArquivo.setEnabled(false);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEnabled(false);
        numeroNota.setEditable(false);
        data.setEnabled(false);
        descricaoNota.setEnabled(false);
        codigoCliente.setEditable(false);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        pesquisarCliente.setEnabled(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEnabled(false);
        //SIGA-SIAFI------------------------------------------------------------
        jftfCpfUsr.setEditable(false);
        jtfNomeUsr.setEditable(false);
        jftfUg.setEditable(false);
        jdcDataLancamento.setEnabled(false);
        jftfHoraLancamento.setEditable(false);
        //GRU-------------------------------------------------------------------
        jftfCpfUsrGru.setEditable(false);
        jtfNomeUsrGru.setEditable(false);
        jftfCodRecGru.setEditable(false);
        jdcDataLancamentoGru.setEnabled(false);
        jftfHoraLancamentoGru.setEditable(false);
        valorNota.setEditable(false);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(false);
    }

    public void estadoPosExcluir() {
        //BOTOES PRINCIPAIS-----------------------------------------------------
        botaoPesquisarNota.setEnabled(true);
        botaoIncluirNota.setEnabled(true);
        botaoEditarNota.setEnabled(false);
        botaoExcluirNota.setEnabled(false);
        botaoGravarNota.setEnabled(false);
        botaoCancelarNota.setEnabled(false);
        botaoGerarArquivo.setEnabled(false);
        //DADOS DA NOTA---------------------------------------------------------
        serieNota.setEditable(false);
        numeroNota.setEditable(false);
        data.setEnabled(false);
        descricaoNota.setEditable(false);
        codigoCliente.setEditable(false);
        nomeCliente.setEditable(false);
        cnpjCpf.setEditable(false);
        nomeContatoCliente.setEditable(false);
        telefoneCliente.setEditable(false);
        telefoneCliente2.setEditable(false);
        logadouroCliente.setEditable(false);
        tipoEndereco.setEditable(false);
        bairroCliente.setEditable(false);
        cidadeCliente.setEditable(false);
        ufCliente.setEditable(false);
        complementoCliente.setEditable(false);
        cepCliente.setEditable(false);
        emailCliente.setEditable(false);
        pesquisarCliente.setEnabled(false);
        //DADOS DE PAGAMENTO----------------------------------------------------
        jcbFormaPgto.setEditable(false);
        valorNota.setEditable(false);
        //SIGA-SIAFI------------------------------------------------------------
        jftfCpfUsr.setEditable(false);
        jtfNomeUsr.setEditable(false);
        jftfUg.setEditable(false);
        jdcDataLancamento.setEnabled(false);
        jftfHoraLancamento.setEditable(false);
        //GRU-------------------------------------------------------------------
        jftfCpfUsrGru.setEditable(false);
        jtfNomeUsrGru.setEditable(false);
        jftfCodRecGru.setEditable(false);
        jdcDataLancamentoGru.setEnabled(false);
        jftfHoraLancamentoGru.setEditable(false);
        //OBSERVACOES-----------------------------------------------------------
        areaObservacoes.setEditable(false);
        //LIMPA OS CAMPOS-------------------------------------------------------
        numeroNota.setText(null);
        data.setDate(null);
        codigoCliente.setText(null);
        nomeCliente.setText(null);
        tipoCliente.setText(null);
        cnpjCpf.setText(null);
        nomeContatoCliente.setText(null);
        telefoneCliente.setText(null);
        telefoneCliente2.setText(null);
        logadouroCliente.setText(null);
        tipoEndereco.setText(null);
        bairroCliente.setText(null);
        cidadeCliente.setText(null);
        ufCliente.setText(null);
        complementoCliente.setText(null);
        cepCliente.setText(null);
        emailCliente.setText(null);
        pesquisarCliente.setText(null);
        valorNota.setText(null);
        areaObservacoes.setText(null);
        //SIGA-SIAFI------------------------------------------------------------
        jftfCpfUsr.setText(null);
        jtfNomeUsr.setText(null);
        jftfUg.setText(null);
        jdcDataLancamento.setDate(null);
        jftfHoraLancamento.setText(null);
        //GRU-------------------------------------------------------------------
        jftfCpfUsrGru.setText(null);
        jtfNomeUsrGru.setText(null);
        jftfCodRecGru.setText(null);
        jdcDataLancamentoGru.setDate(null);
        jftfHoraLancamentoGru.setText(null);
    }
}
