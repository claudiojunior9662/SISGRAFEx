/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.cadastros.acabamentos;

import exception.EnvioExcecao;
import java.sql.SQLException;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import ui.cadastros.produtos.ProdutoFrame;
import ui.controle.Controle;

/**
 *
 * @author claud
 */
public class AcabamentosCadastro extends javax.swing.JInternalFrame {

    /**
     * @param EDITANDO 1 - SIM 2 - NÃO 3 - SOMENTE PREÇO
     */
    private byte EDITANDO = 2;
    private int CODIGO = 0;
    /**
     * @param CLASSE_PAI 1 - CADASTRO 2 - CADASTRO DE PRODUTOS 3 - ORDENADOR
     */
    private byte CLASSE_PAI;
    private JLabel loading;

    private static AcabamentosCadastro acabamentosCadastroNovo;

    public static AcabamentosCadastro getInstancia(byte CLASSE_PAI, JLabel loading) {
        return new AcabamentosCadastro(CLASSE_PAI, loading);
    }

    /**
     * Creates new form AcabamentosCadastroNovo
     */
    public AcabamentosCadastro(byte CLASSE_PAI, JLabel loading) {
        initComponents();
        this.CLASSE_PAI = CLASSE_PAI;
        this.loading = loading;
        selecionar.setEnabled(false);
        botaoEditar.setEnabled(false);
        desativarMaquina.setEnabled(false);
        ativarMaquina.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        nomeMaquina = new javax.swing.JTextField();
        botaoSalvar = new javax.swing.JButton();
        custo = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaConsulta = new javax.swing.JTable();
        botaoEditar = new javax.swing.JButton();
        tipoPesquisa = new javax.swing.JComboBox<>();
        textoPesquisa = new javax.swing.JTextField();
        botaoPesquisar = new javax.swing.JButton();
        mostraTodos = new javax.swing.JButton();
        selecionar = new javax.swing.JButton();
        desativarMaquina = new javax.swing.JButton();
        ativarMaquina = new javax.swing.JButton();

        setTitle("CADASTRO DE ACABAMENTOS");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/acabamentos.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(620, 443));

        nomeMaquina.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME DA MÁQUINA"));
        nomeMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeMaquinaActionPerformed(evt);
            }
        });

        botaoSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        botaoSalvar.setText("SALVAR");
        botaoSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSalvarActionPerformed(evt);
            }
        });

        custo.setBorder(javax.swing.BorderFactory.createTitledBorder("CUSTO HORA"));
        custo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoSalvar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(custo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 458, Short.MAX_VALUE))
                    .addComponent(nomeMaquina))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nomeMaquina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(custo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addComponent(botaoSalvar)
                .addContainerGap())
        );

        tabPane.addTab("NOVO/EDITAR", new javax.swing.ImageIcon(getClass().getResource("/icones/novo_editar.png")), jPanel2); // NOI18N

        tabelaConsulta.setAutoCreateRowSorter(true);
        tabelaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "MÁQUINA", "ATIVA", "CUSTO HORA"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsulta.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        tabelaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaConsulta);

        botaoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        botaoEditar.setText("EDITAR");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        tipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "CÓDIGO", "NOME MÁQUINA", "MÁQUINA ATIVA" }));
        tipoPesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder("PESQUISAR POR"));
        tipoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPesquisaActionPerformed(evt);
            }
        });

        botaoPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        botaoPesquisar.setText("PESQUISAR");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        mostraTodos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ultimos.png"))); // NOI18N
        mostraTodos.setText("MOSTRAR TODOS");
        mostraTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostraTodosActionPerformed(evt);
            }
        });

        selecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirma.png"))); // NOI18N
        selecionar.setText("SELECIONAR");
        selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selecionarActionPerformed(evt);
            }
        });

        desativarMaquina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ativar_maquina.png"))); // NOI18N
        desativarMaquina.setText("DESATIVAR MÁQUINA");
        desativarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desativarMaquinaActionPerformed(evt);
            }
        });

        ativarMaquina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/desativar_maquina.png"))); // NOI18N
        ativarMaquina.setText("ATIVAR MÁQUINA");
        ativarMaquina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ativarMaquinaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoPesquisar)
                            .addComponent(mostraTodos)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(botaoEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(desativarMaquina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ativarMaquina)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selecionar))
                    .addComponent(jScrollPane1))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {botaoPesquisar, mostraTodos});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(botaoPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mostraTodos))
                    .addComponent(tipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoEditar)
                    .addComponent(selecionar)
                    .addComponent(desativarMaquina)
                    .addComponent(ativarMaquina))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {textoPesquisa, tipoPesquisa});

        tabPane.addTab("CONSULTAS", new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png")), jPanel3); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 610, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 398, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeMaquinaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeMaquinaActionPerformed

    private void botaoSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSalvarActionPerformed
        new Thread() {
            @Override
            public void run() {
                try {

                    /**
                     * Mostra a imagem de carregamento
                     */
                    loading.setVisible(true);
                    loading.setText("SALVANDO...");

                    /**
                     * Cria um novo acabamento
                     */
                    AcabamentoBEAN acabamentosBEAN = new AcabamentoBEAN();

                    /**
                     * Verifica condições
                     */
                    if (nomeMaquina.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "INSIRA UM VALOR NO CAMPO NOME MÁQUINA.",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    } else {
                        acabamentosBEAN.setNomeMaquina(nomeMaquina.getText().toUpperCase());
                    }

                    if (custo.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "INSIRA UM VALOR NO CAMPO CUSTO HORA.",
                                "ERRO", JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    } else {
                        acabamentosBEAN.setCustoHora(Float.valueOf(custo.getValue().toString()));
                    }

                    /**
                     * Define a máquina como ativa
                     */
                    acabamentosBEAN.setMaquinaAtiva(1);

                    /**
                     * Cria ou atualiza o acabamento
                     */
                    switch (EDITANDO) {
                        case 1:
                        case 3:
                            acabamentosBEAN.setCodigo(CODIGO);
                            AcabamentoDAO.atualiza(acabamentosBEAN);
                            JOptionPane.showMessageDialog(null, "ACABAMENTO ATUALIZADO COM SUCESSO!",
                                    "AVISO",
                                    JOptionPane.INFORMATION_MESSAGE);
                            break;
                        case 2:
                            AcabamentoDAO.cria(acabamentosBEAN);
                            JOptionPane.showMessageDialog(null, "ACABAMENTO SALVO COM SUCESSO!",
                                    "AVISO",
                                    JOptionPane.INFORMATION_MESSAGE);
                            break;
                    }

                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }

                /**
                 * Esconde a mensagem de carregamento
                 */
                loading.setVisible(false);

                EDITANDO = 2;
                limpa();
            }
        }.start();
    }//GEN-LAST:event_botaoSalvarActionPerformed

    private void selecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selecionarActionPerformed
        /**
         * Exibe imagem de carregamento
         */
        loading.setVisible(true);
        loading.setText("SELECIONANDO...");

        DefaultTableModel modeloAcabamentos = (DefaultTableModel) ProdutoFrame.tblAcabamentos.getModel();

        for (int i : tabelaConsulta.getSelectedRows()) {
            if (ProdutoFrame.tblAcabamentos.getRowCount() == 0) {
                modeloAcabamentos.addRow(new Object[]{
                    Integer.valueOf(tabelaConsulta.getValueAt(i, 0).toString()),
                    tabelaConsulta.getValueAt(i, 1).toString()});
            } else {
                for (int j = 0; j < ProdutoFrame.tblAcabamentos.getRowCount(); j++) {
                    if (Integer.valueOf(tabelaConsulta.getValueAt(i, 0).toString())
                            == Integer.valueOf(ProdutoFrame.tblAcabamentos.getValueAt(j, 0).toString())) {
                        JOptionPane.showMessageDialog(null,
                                "O ACABAMENTO "
                                + tabelaConsulta.getValueAt(i, 1).toString()
                                + " JÁ EXISTE NA TABELA.");
                        loading.setVisible(false);
                        return;
                    }
                }
                modeloAcabamentos.addRow(new Object[]{
                    Integer.valueOf(tabelaConsulta.getValueAt(i, 0).toString()),
                    tabelaConsulta.getValueAt(i, 1).toString()});
            }
        }

        loading.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_selecionarActionPerformed

    private void mostraTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostraTodosActionPerformed
        mostraTodos();
    }//GEN-LAST:event_mostraTodosActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed
        try {

            if (tipoPesquisa.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "SELECIONE UM TIPO DE PESQUISA!",
                        "ERRO", JOptionPane.ERROR_MESSAGE);
                return;
            }

            loading.setVisible(true);
            loading.setText("PESQUISANDO...");

            DefaultTableModel modeloConsulta = (DefaultTableModel) tabelaConsulta.getModel();
            modeloConsulta.setNumRows(0);
            for (AcabamentoBEAN aBEAN : AcabamentoDAO.pesquisaRegistro((byte) tipoPesquisa.getSelectedIndex(), textoPesquisa.getText())) {
                modeloConsulta.addRow(new Object[]{
                    aBEAN.getCodigo(),
                    aBEAN.getNomeMaquina(),
                    aBEAN.getMaquinaAtiva() == 1 ? "SIM" : "NÃO",
                    aBEAN.getCustoHora()});
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }

        loading.setVisible(false);
    }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void tipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoPesquisaActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        try {
            /**
             * Mostra a imagem de carregamento
             */
            loading.setVisible(true);
            loading.setText("CARREGANDO EDIÇÃO...");

            /**
             * Limpa a tela de cadastro
             */
            limpa();

            /**
             * Resgata o código do acabamento
             */
            CODIGO = (int) tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0);

            /**
             * Resgata os dados do acabamento
             */
            for (AcabamentoBEAN aBEAN : AcabamentoDAO.carregaEdicao(CODIGO)) {
                nomeMaquina.setText(aBEAN.getNomeMaquina());
                custo.setValue(aBEAN.getCustoHora());
            }

            /**
             * Verifica a variável editando e arruma a tela
             */
            switch (EDITANDO) {
                case 3:
                    estadoEditarSomPreco();
                    break;
                default:
                    tabPane.setSelectedIndex(0);
                    EDITANDO = 1;
                    break;
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }

        loading.setVisible(false);
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void tabelaConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaMouseClicked
        try {
            if (!AcabamentoDAO.usandoProduto(Integer.valueOf(
                    tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(),
                            0).toString())).isEmpty()) {
                botaoEditar.setEnabled(true);
                EDITANDO = 3;
            } else {
                botaoEditar.setEnabled(true);
            }

            if (tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 2).toString().equals("SIM")) {
                desativarMaquina.setEnabled(true);
                ativarMaquina.setEnabled(false);
            } else {
                ativarMaquina.setEnabled(true);
                desativarMaquina.setEnabled(false);
            }

            if (CLASSE_PAI == 2) {
                selecionar.setEnabled(true);
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_tabelaConsultaMouseClicked

    private void desativarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desativarMaquinaActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "CONFIRMA A DESATIVAÇÃO DESTA MÁQUINA?",
                "ATENÇÃO!", dialogButton);
        if (dialogResult != 0) {
            return;
        } else {
            try {
                CODIGO = Integer.valueOf(tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString());
                AcabamentoDAO.desativaMaquina(CODIGO);
                mostraTodos();
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }

        }
    }//GEN-LAST:event_desativarMaquinaActionPerformed

    private void ativarMaquinaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ativarMaquinaActionPerformed
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog(this, "CONFIRMA A ATIVAÇÃO DESTA MÁQUINA?",
                "ATENÇÃO!", dialogButton);
        if (dialogResult != 0) {
            return;
        } else {
            try {
                CODIGO = Integer.valueOf(tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString());
                AcabamentoDAO.ativaMaquina(CODIGO);
                mostraTodos();
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }

        }
    }//GEN-LAST:event_ativarMaquinaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ativarMaquina;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoPesquisar;
    private javax.swing.JButton botaoSalvar;
    private javax.swing.JFormattedTextField custo;
    private javax.swing.JButton desativarMaquina;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton mostraTodos;
    private javax.swing.JTextField nomeMaquina;
    private javax.swing.JButton selecionar;
    private javax.swing.JTabbedPane tabPane;
    public static javax.swing.JTable tabelaConsulta;
    private javax.swing.JTextField textoPesquisa;
    private javax.swing.JComboBox<String> tipoPesquisa;
    // End of variables declaration//GEN-END:variables
    /**
     * Limpa a tela de cadastro
     */
    private void limpa() {
        nomeMaquina.setText("");
        custo.setText("");
        nomeMaquina.setEditable(true);
        custo.setEnabled(true);

    }

    private void estadoEditarSomPreco() {
        nomeMaquina.setEditable(false);
        custo.setEnabled(true);
        tabPane.setSelectedIndex(0);
    }

    /**
     * Mostra todos os acabamentos
     */
    private void mostraTodos() {
        new Thread() {
            @Override
            public void run() {
                try {

                    loading.setVisible(true);
                    loading.setText("CARREGANDO...");

                    DefaultTableModel modeloConsulta = (DefaultTableModel) tabelaConsulta.getModel();
                    modeloConsulta.setNumRows(0);
                    for (AcabamentoBEAN acabamento : AcabamentoDAO.mostraTodos()) {
                        modeloConsulta.addRow(new Object[]{
                            acabamento.getCodigo(),
                            acabamento.getNomeMaquina(),
                            acabamento.getMaquinaAtiva() == 1 ? "SIM" : "NÃO",
                            acabamento.getCustoHora()});
                    }
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }

                loading.setVisible(false);
            }
        }.start();

    }
}
