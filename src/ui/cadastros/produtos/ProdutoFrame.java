/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.cadastros.produtos;

import exception.EnvioExcecao;
import ui.cadastros.papeis.PapelBEAN;
import exception.SemAcabamentoException;
import javax.swing.table.DefaultTableModel;
import ui.cadastros.papeis.PapelCadastro;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import ui.cadastros.acabamentos.AcabamentoDAO;
import ui.cadastros.acabamentos.AcabamentosCadastro;
import ui.cadastros.papeis.PapelDAO;
import ui.controle.Controle;
import ui.orcamentos.operacoes.OrcamentoPrincipalFrame;
import ui.principal.GerenteJanelas;

/**
 *
 * @author claud
 */
public class ProdutoFrame extends javax.swing.JInternalFrame {

    public static boolean orcamentoNovo;
    public static boolean orcamentoEditar;
    public static String descricaoPapel;
    private String COD_PROD;
    private static boolean SEL_ORC = false;
    public static boolean inserir = false;
    private final JLabel loading;
    private final GerenteJanelas gj;
    private static ProdutoFrame cadastroProdutosNovo;

    /**
     * @param FUNCAO 1 - EDITANDO 2 - CLONANDO 3 - ALTERANDO ESTOQUE
     */
    private byte FUNCAO = 0;

    public static void setSEL_ORC(boolean SEL_ORC) {
        ProdutoFrame.SEL_ORC = SEL_ORC;
    }

    public static ProdutoFrame getInstancia(JLabel loading, GerenteJanelas gj) {
        return new ProdutoFrame(loading, gj);
    }

    /**
     * Creates new form CadastroProdutosNovo
     *
     * @param loading label para mostrar carregamento do sistema
     * @param gj gerente janelas para abrir ou fechar janelas
     */
    public ProdutoFrame(JLabel loading, GerenteJanelas gj) {
        initComponents();
        this.loading = loading;
        this.gj = gj;
        botaoSelecionar.setEnabled(false);
        botaoEditar.setEnabled(false);
        botaoClonar.setEnabled(false);
        retirarAcabamento.setEnabled(false);
        retirarPapel.setEnabled(false);
        orelha.setEnabled(false);
        orelha.setValue(0);
        disponivelVendas.setSelected(false);

        limpa();
        limpaPe();

//        tabPane.setEnabledAt(2, false);
//        tabPane.setEnabledAt(3, false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        descricaoProduto = new javax.swing.JTextField();
        salvar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaPapel = new javax.swing.JTable();
        tipoPapel = new javax.swing.JComboBox<>();
        coresFrente = new com.toedter.components.JSpinField();
        coresVerso = new com.toedter.components.JSpinField();
        concluirPapel = new javax.swing.JButton();
        codigoPapel = new javax.swing.JFormattedTextField();
        orelha = new javax.swing.JFormattedTextField();
        inserirPapel = new javax.swing.JButton();
        retirarPapel = new javax.swing.JButton();
        larguraProduto = new javax.swing.JFormattedTextField();
        alturaProduto = new javax.swing.JFormattedTextField();
        quantidadeFolhas = new com.toedter.components.JSpinField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaAcabamentos = new javax.swing.JTable();
        pesquisar_acabamentos = new javax.swing.JButton();
        retirarAcabamento = new javax.swing.JButton();
        tipoProduto = new javax.swing.JComboBox<>();
        disponivelVendas = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaConsulta = new javax.swing.JTable();
        tipoPesquisa = new javax.swing.JComboBox<>();
        textoPesquisa = new javax.swing.JTextField();
        botaoPesquisar = new javax.swing.JButton();
        botaoMostrarUltimos = new javax.swing.JButton();
        botaoSelecionar = new javax.swing.JButton();
        botaoEditar = new javax.swing.JButton();
        botaoClonar = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jtfDescricaoPe = new javax.swing.JTextField();
        btnSalvarPe = new javax.swing.JButton();
        jcbTipoPe = new javax.swing.JComboBox<>();
        jckbDispVendas = new javax.swing.JCheckBox();
        btnLimparPe = new javax.swing.JButton();
        jftfLarguraPe = new javax.swing.JFormattedTextField();
        jftfAlturaPe = new javax.swing.JFormattedTextField();
        jsfQtdFolhasPe = new com.toedter.components.JSpinField();
        jPanel7 = new javax.swing.JPanel();
        jftfEstoqueFisico = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jckbAvisoEstoque = new javax.swing.JCheckBox();
        jftfAvisoEstoque = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        lblMov = new javax.swing.JLabel();
        jftfEspessuraPe = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jftfVlrUnitPe = new javax.swing.JFormattedTextField();
        jckbProm = new javax.swing.JCheckBox();
        jftfVlrProm = new javax.swing.JFormattedTextField();
        jckbProdPreVenda = new javax.swing.JCheckBox();
        jdcInicioProm = new com.toedter.calendar.JDateChooser();
        jdcFimProm = new com.toedter.calendar.JDateChooser();
        jPanel9 = new javax.swing.JPanel();
        jftfQtdMin = new javax.swing.JFormattedTextField();
        jftfQtdMax = new javax.swing.JFormattedTextField();
        jckbQtdMax = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jftfPesoPe = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        textoPesqPe = new javax.swing.JTextField();
        btnPesqPe = new javax.swing.JButton();
        btnMostrarUltPe = new javax.swing.JButton();
        btnSelPe = new javax.swing.JButton();
        btnEditarPe = new javax.swing.JButton();
        btnClonarPe = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblConsultaPe = new javax.swing.JTable();
        tipoPesqPe = new javax.swing.JComboBox<>();
        altEstoque = new javax.swing.JButton();

        setTitle("CADASTRO DE PRODUTOS");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/produto.png"))); // NOI18N

        jPanel2.setPreferredSize(new java.awt.Dimension(798, 450));

        descricaoProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIÇÃO (MÁXIMO 150 CARACTERES)"));
        descricaoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                descricaoProdutoKeyPressed(evt);
            }
        });

        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        salvar.setText("SALVAR");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "PAPEL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tabelaPapel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO", "TIPO", "ORELHA", "CORES FRENTE", "CORES VERSO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaPapel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaPapelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaPapel);

        tipoPapel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "CAPA", "MIOLO", "FOLHA", "1ª VIA", "2ª VIA", "3ª VIA" }));
        tipoPapel.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO"));
        tipoPapel.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoPapelItemStateChanged(evt);
            }
        });

        coresFrente.setBorder(javax.swing.BorderFactory.createTitledBorder("CORES FRENTE"));

        coresVerso.setBorder(javax.swing.BorderFactory.createTitledBorder("CORES VERSO"));

        concluirPapel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirma.png"))); // NOI18N
        concluirPapel.setText("CONCLUIR");
        concluirPapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                concluirPapelActionPerformed(evt);
            }
        });

        codigoPapel.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓDIGO"));
        codigoPapel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        orelha.setBorder(javax.swing.BorderFactory.createTitledBorder("ORELHA (CM)"));
        orelha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        orelha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orelhaActionPerformed(evt);
            }
        });

        inserirPapel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        inserirPapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirPapelActionPerformed(evt);
            }
        });

        retirarPapel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        retirarPapel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarPapelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(retirarPapel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inserirPapel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(codigoPapel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoPapel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(orelha, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coresFrente, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(coresVerso, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(concluirPapel)
                        .addContainerGap(126, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {inserirPapel, retirarPapel});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(concluirPapel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(codigoPapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tipoPapel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orelha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(coresFrente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(coresVerso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(inserirPapel)
                        .addGap(6, 6, 6)
                        .addComponent(retirarPapel)
                        .addGap(56, 56, 56))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {codigoPapel, tipoPapel});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {concluirPapel, coresVerso});

        larguraProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("LARGURA"));
        larguraProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        alturaProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("ALTURA"));
        alturaProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        alturaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alturaProdutoActionPerformed(evt);
            }
        });

        quantidadeFolhas.setBorder(javax.swing.BorderFactory.createTitledBorder("QTD FOLHAS"));
        quantidadeFolhas.setValue(1);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "ACABAMENTOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        tabelaAcabamentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaAcabamentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaAcabamentosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaAcabamentos);
        if (tabelaAcabamentos.getColumnModel().getColumnCount() > 0) {
            tabelaAcabamentos.getColumnModel().getColumn(1).setPreferredWidth(500);
        }

        pesquisar_acabamentos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        pesquisar_acabamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisar_acabamentosActionPerformed(evt);
            }
        });

        retirarAcabamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/remove.png"))); // NOI18N
        retirarAcabamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retirarAcabamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pesquisar_acabamentos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(retirarAcabamento, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {pesquisar_acabamentos, retirarAcabamento});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pesquisar_acabamentos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(retirarAcabamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tipoProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "FOLHA", "BLOCO", "LIVRO" }));
        tipoProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO"));
        tipoProduto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoProdutoItemStateChanged(evt);
            }
        });

        disponivelVendas.setText("DISPONÍVEL NO @VENDAS");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        jButton1.setText("LIMPAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(disponivelVendas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(salvar))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(descricaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(larguraProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alturaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantidadeFolhas, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tipoProduto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {alturaProduto, larguraProduto});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quantidadeFolhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(descricaoProduto)
                        .addComponent(larguraProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                        .addComponent(alturaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(tipoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(disponivelVendas)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {alturaProduto, descricaoProduto, larguraProduto, quantidadeFolhas, tipoProduto});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {disponivelVendas, jButton1, salvar});

        tabPane.addTab("PRODUÇÃO NOVO/EDITAR", new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png")), jPanel2); // NOI18N

        tabelaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaConsulta);
        if (tabelaConsulta.getColumnModel().getColumnCount() > 0) {
            tabelaConsulta.getColumnModel().getColumn(0).setMinWidth(50);
            tabelaConsulta.getColumnModel().getColumn(0).setPreferredWidth(50);
            tabelaConsulta.getColumnModel().getColumn(1).setPreferredWidth(700);
        }

        tipoPesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "CÓDIGO", "DESCRIÇÃO" }));
        tipoPesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder("PESQUISAR POR"));
        tipoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoPesquisaActionPerformed(evt);
            }
        });

        botaoPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        botaoPesquisar.setText("PESQUISAR");
        botaoPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisarActionPerformed(evt);
            }
        });

        botaoMostrarUltimos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ultimos.png"))); // NOI18N
        botaoMostrarUltimos.setText("MOSTRAR 45 ÚLTIMOS");
        botaoMostrarUltimos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMostrarUltimosActionPerformed(evt);
            }
        });

        botaoSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirma.png"))); // NOI18N
        botaoSelecionar.setText("SELECIONAR");
        botaoSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecionarActionPerformed(evt);
            }
        });

        botaoEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        botaoEditar.setText("EDITAR");
        botaoEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEditarActionPerformed(evt);
            }
        });

        botaoClonar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/clonar.png"))); // NOI18N
        botaoClonar.setText("CLONAR");
        botaoClonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoClonarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botaoClonar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoSelecionar))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tipoPesquisa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoMostrarUltimos)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tipoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaoMostrarUltimos)
                        .addComponent(botaoPesquisar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoSelecionar)
                    .addComponent(botaoEditar)
                    .addComponent(botaoClonar))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {botaoMostrarUltimos, botaoPesquisar, textoPesquisa, tipoPesquisa});

        tabPane.addTab("PRODUÇÃO CONSULTAS", new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png")), jPanel3); // NOI18N

        jtfDescricaoPe.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIÇÃO (MÁXIMO 150 CARACTERES)"));
        jtfDescricaoPe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfDescricaoPeKeyPressed(evt);
            }
        });

        btnSalvarPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        btnSalvarPe.setText("SALVAR");
        btnSalvarPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPeActionPerformed(evt);
            }
        });

        jcbTipoPe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "FOLHA", "BLOCO", "LIVRO" }));
        jcbTipoPe.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO"));
        jcbTipoPe.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbTipoPeItemStateChanged(evt);
            }
        });

        jckbDispVendas.setText("DISPONÍVEL NO @VENDAS");

        btnLimparPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        btnLimparPe.setText("LIMPAR");
        btnLimparPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparPeActionPerformed(evt);
            }
        });

        jftfLarguraPe.setBorder(javax.swing.BorderFactory.createTitledBorder("LARGURA"));
        jftfLarguraPe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfLarguraPe.setToolTipText("EM CENTÍMETROS");
        jftfLarguraPe.setValue(0);

        jftfAlturaPe.setBorder(javax.swing.BorderFactory.createTitledBorder("ALTURA"));
        jftfAlturaPe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfAlturaPe.setToolTipText("EM CENTÍMETROS");
        jftfAlturaPe.setValue(0);
        jftfAlturaPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftfAlturaPeActionPerformed(evt);
            }
        });

        jsfQtdFolhasPe.setBorder(javax.swing.BorderFactory.createTitledBorder("QTD FOLHAS"));
        jsfQtdFolhasPe.setValue(1);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "CONTROLE DE ESTOQUE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jftfEstoqueFisico.setBorder(javax.swing.BorderFactory.createTitledBorder("ESTOQUE FÍSICO"));
        jftfEstoqueFisico.setValue(0);

        jLabel1.setText("UNIDADES");

        jckbAvisoEstoque.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckbAvisoEstoqueItemStateChanged(evt);
            }
        });

        jftfAvisoEstoque.setBorder(javax.swing.BorderFactory.createTitledBorder("AVISO DE ESTOQUE EM"));
        jftfAvisoEstoque.setEnabled(false);
        jftfAvisoEstoque.setValue(0);

        jLabel2.setText("UNIDADES");

        lblMov.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMov, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jftfEstoqueFisico, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jckbAvisoEstoque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftfAvisoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftfAvisoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jckbAvisoEstoque)
                    .addComponent(jLabel1)
                    .addComponent(jftfEstoqueFisico, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMov, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jckbAvisoEstoque, jftfAvisoEstoque, jftfEstoqueFisico});

        jftfEspessuraPe.setBorder(javax.swing.BorderFactory.createTitledBorder("ESPESSURA"));
        jftfEspessuraPe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfEspessuraPe.setToolTipText("EM CENTÍMETROS");
        jftfEspessuraPe.setValue(0);
        jftfEspessuraPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftfEspessuraPeActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/largura.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/espessura.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/altura.png"))); // NOI18N

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "CONTROLE DE VALORES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jftfVlrUnitPe.setBorder(javax.swing.BorderFactory.createTitledBorder("VALOR UNITÁRIO (R$)"));
        jftfVlrUnitPe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfVlrUnitPe.setValue(0);

        jckbProm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckbPromItemStateChanged(evt);
            }
        });

        jftfVlrProm.setBorder(javax.swing.BorderFactory.createTitledBorder("VALOR PROMOCIONAL (R$)"));
        jftfVlrProm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfVlrProm.setEnabled(false);
        jftfVlrProm.setValue(0);

        jckbProdPreVenda.setText("PRODUTO PARA PRÉ-VENDA?");

        jdcInicioProm.setBorder(javax.swing.BorderFactory.createTitledBorder("INÍCIO"));
        jdcInicioProm.setEnabled(false);

        jdcFimProm.setBorder(javax.swing.BorderFactory.createTitledBorder("FIM"));
        jdcFimProm.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jckbProdPreVenda)
                .addGap(18, 18, 18)
                .addComponent(jftfVlrUnitPe, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jckbProm)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jftfVlrProm, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcInicioProm, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jdcFimProm, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jdcInicioProm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jdcFimProm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jckbProdPreVenda)
                        .addComponent(jftfVlrUnitPe, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jckbProm)
                        .addComponent(jftfVlrProm, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jckbProdPreVenda, jckbProm, jftfVlrUnitPe});

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jdcFimProm, jdcInicioProm, jftfVlrProm});

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "CONTROLE DE PEDIDOS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jftfQtdMin.setBorder(javax.swing.BorderFactory.createTitledBorder("QUANTIDADE MÍNIMA"));
        jftfQtdMin.setValue(0);

        jftfQtdMax.setBorder(javax.swing.BorderFactory.createTitledBorder("QUANTIDADE MÁXIMA"));
        jftfQtdMax.setEnabled(false);
        jftfQtdMax.setValue(0);

        jckbQtdMax.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckbQtdMaxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jftfQtdMin, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jckbQtdMax)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jftfQtdMax, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jckbQtdMax)
                    .addComponent(jftfQtdMax, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jftfQtdMin, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jckbQtdMax, jftfQtdMax});

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/peso.png"))); // NOI18N

        jftfPesoPe.setBorder(javax.swing.BorderFactory.createTitledBorder("PESO"));
        jftfPesoPe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jftfPesoPe.setToolTipText("EM KILOGRAMAS");
        jftfPesoPe.setValue(0);
        jftfPesoPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftfPesoPeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfDescricaoPe, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnLimparPe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jckbDispVendas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSalvarPe))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jftfLarguraPe, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addGap(2, 2, 2)
                        .addComponent(jftfAlturaPe, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addGap(4, 4, 4)
                        .addComponent(jftfEspessuraPe, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(9, 9, 9)
                        .addComponent(jftfPesoPe, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(jsfQtdFolhasPe, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbTipoPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jftfAlturaPe, jftfEspessuraPe, jftfLarguraPe, jftfPesoPe});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtfDescricaoPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jftfLarguraPe, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jftfAlturaPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jftfEspessuraPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jftfPesoPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvarPe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jckbDispVendas)
                    .addComponent(btnLimparPe))
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jsfQtdFolhasPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbTipoPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(426, 426, 426))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel4, jLabel5, jLabel6, jLabel7, jcbTipoPe, jftfAlturaPe, jftfEspessuraPe, jftfLarguraPe, jftfPesoPe, jsfQtdFolhasPe, jtfDescricaoPe});

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnLimparPe, btnSalvarPe, jckbDispVendas});

        tabPane.addTab("PRONTA ENTREGA NOVO/EDITAR", new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png")), jPanel5); // NOI18N

        btnPesqPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png"))); // NOI18N
        btnPesqPe.setText("PESQUISAR");
        btnPesqPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesqPeActionPerformed(evt);
            }
        });

        btnMostrarUltPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/ultimos.png"))); // NOI18N
        btnMostrarUltPe.setText("MOSTRAR 45 ÚLTIMOS");
        btnMostrarUltPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarUltPeActionPerformed(evt);
            }
        });

        btnSelPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirma.png"))); // NOI18N
        btnSelPe.setText("SELECIONAR");
        btnSelPe.setEnabled(false);
        btnSelPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelPeActionPerformed(evt);
            }
        });

        btnEditarPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        btnEditarPe.setText("EDITAR");
        btnEditarPe.setEnabled(false);
        btnEditarPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPeActionPerformed(evt);
            }
        });

        btnClonarPe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/clonar.png"))); // NOI18N
        btnClonarPe.setText("CLONAR");
        btnClonarPe.setEnabled(false);
        btnClonarPe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClonarPeActionPerformed(evt);
            }
        });

        tblConsultaPe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "DESCRIÇÃO", "VALOR UNITÁRIO", "ESTOQUE", "PRÉ-VENDA", "PROMOÇÃO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConsultaPe.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultaPeMouseClicked(evt);
            }
        });
        tblConsultaPe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblConsultaPeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tblConsultaPeKeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(tblConsultaPe);
        if (tblConsultaPe.getColumnModel().getColumnCount() > 0) {
            tblConsultaPe.getColumnModel().getColumn(0).setMinWidth(50);
            tblConsultaPe.getColumnModel().getColumn(0).setPreferredWidth(20);
            tblConsultaPe.getColumnModel().getColumn(1).setPreferredWidth(400);
            tblConsultaPe.getColumnModel().getColumn(3).setPreferredWidth(30);
            tblConsultaPe.getColumnModel().getColumn(4).setPreferredWidth(35);
            tblConsultaPe.getColumnModel().getColumn(5).setPreferredWidth(35);
        }

        tipoPesqPe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "CÓDIGO", "DESCRIÇÃO" }));
        tipoPesqPe.setBorder(javax.swing.BorderFactory.createTitledBorder("PESQUISAR POR"));

        altEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        altEstoque.setText("ALTERAR ESTOQUE/VALOR UNITÁRIO");
        altEstoque.setEnabled(false);
        altEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altEstoqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(altEstoque)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnClonarPe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditarPe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelPe))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(tipoPesqPe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textoPesqPe, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesqPe)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMostrarUltPe)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textoPesqPe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnMostrarUltPe)
                        .addComponent(btnPesqPe))
                    .addComponent(tipoPesqPe, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelPe)
                    .addComponent(btnEditarPe)
                    .addComponent(btnClonarPe)
                    .addComponent(altEstoque))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnMostrarUltPe, btnPesqPe, textoPesqPe, tipoPesqPe});

        tabPane.addTab("PRONTA ENTREGA CONSULTAS", new javax.swing.ImageIcon(getClass().getResource("/icones/pesquisar.png")), jPanel6); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void descricaoProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descricaoProdutoKeyPressed

    }//GEN-LAST:event_descricaoProdutoKeyPressed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        salvarProduto();
    }//GEN-LAST:event_salvarActionPerformed

    private void tabelaPapelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaPapelMouseClicked
        retirarPapel.setEnabled(true);
    }//GEN-LAST:event_tabelaPapelMouseClicked

    private void tipoPapelItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoPapelItemStateChanged
        if (tipoPapel.getSelectedItem() != null) {
            if (tipoProduto.getSelectedItem().toString().equals("LIVRO") && tipoPapel.getSelectedItem().toString().equals("CAPA") && inserir == true) {
                orelha.setEnabled(true);
            } else {
                orelha.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tipoPapelItemStateChanged

    private void concluirPapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_concluirPapelActionPerformed
        if (tipoPapel.getSelectedItem().toString().equals("CAPA")) {

        } else {
            orelha.setValue(0);
        }
        DefaultTableModel modelo_papel = (DefaultTableModel) tabelaPapel.getModel();
        modelo_papel.addRow(new Object[]{
            codigoPapel.getValue(),
            descricaoPapel,
            tipoPapel.getSelectedItem(),
            orelha.getValue(),
            coresFrente.getValue(),
            coresVerso.getValue()});
        estado1Papel();
        inserir = false;
    }//GEN-LAST:event_concluirPapelActionPerformed

    private void orelhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orelhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_orelhaActionPerformed

    private void inserirPapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirPapelActionPerformed
        if (tipoProduto.getSelectedItem().toString().equals("SELECIONE...")) {
            JOptionPane.showMessageDialog(null, "SELECIONE UM TIPO DE PRODUTO!");
            return;
        } else {
            PapelCadastro pc = new PapelCadastro();
            pc.setLocationRelativeTo(null);
            pc.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            pc.setTitle("CADASTRO DE PAPÉIS");
            PapelCadastro.listaPrecoPapeis = true;
            pc.setVisible(true);
            inserir = true;
            orelha.setValue(0f);
        }
    }//GEN-LAST:event_inserirPapelActionPerformed

    private void retirarPapelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarPapelActionPerformed
        DefaultTableModel modeloPapeis = (DefaultTableModel) tabelaPapel.getModel();
        modeloPapeis.removeRow(tabelaPapel.getSelectedRow());
        tabelaPapel.validate();
        retirarPapel.setEnabled(false);
    }//GEN-LAST:event_retirarPapelActionPerformed

    private void tabelaAcabamentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaAcabamentosMouseClicked
        retirarAcabamento.setEnabled(true);
    }//GEN-LAST:event_tabelaAcabamentosMouseClicked

    private void pesquisar_acabamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisar_acabamentosActionPerformed
        gj.abrirJanelas(AcabamentosCadastro.getInstancia((byte) 2, loading),
                "CADASTRO DE ACABAMENTOS");
    }//GEN-LAST:event_pesquisar_acabamentosActionPerformed

    private void retirarAcabamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retirarAcabamentoActionPerformed
        DefaultTableModel modeloAcabamentos = (DefaultTableModel) tabelaAcabamentos.getModel();
        modeloAcabamentos.removeRow(tabelaAcabamentos.getSelectedRow());
        retirarAcabamento.setEnabled(false);
    }//GEN-LAST:event_retirarAcabamentoActionPerformed

    private void tipoProdutoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoProdutoItemStateChanged
        if (tipoProduto.getSelectedItem().toString().equals("FOLHA") && tipoProduto.getSelectedItem() != null) {
            tipoPapel.removeAllItems();
            tipoPapel.addItem("FOLHA");
        }
        if (tipoProduto.getSelectedItem().toString().equals("LIVRO") && tipoProduto.getSelectedItem() != null) {
            tipoPapel.removeAllItems();
            tipoPapel.addItem("SELECIONE...");
            tipoPapel.addItem("CAPA");
            tipoPapel.addItem("MIOLO");
        }
        if (tipoProduto.getSelectedItem().toString().equals("BLOCO") && tipoProduto.getSelectedItem() != null) {
            tipoPapel.removeAllItems();
            tipoPapel.addItem("SELECIONE...");
            tipoPapel.addItem("CAPA");
            tipoPapel.addItem("1ª VIA");
            tipoPapel.addItem("2ª VIA");
            tipoPapel.addItem("3ª VIA");
        }
        if (tipoProduto.getSelectedItem().toString().equals("OUTROS") && tipoProduto.getSelectedItem() != null) {
            tipoPapel.removeAllItems();
            tipoPapel.addItem("FOLHA");
        }
    }//GEN-LAST:event_tipoProdutoItemStateChanged

    private void tabelaConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaMouseClicked
        try {
            if (orcamentoNovo | orcamentoEditar) {
                botaoSelecionar.setEnabled(true);
            } else {
                botaoSelecionar.setEnabled(false);
            }

            botaoClonar.setEnabled(true);
            COD_PROD = tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString();
            if (ProdutoDAO.retornaUsoProduto(Integer.valueOf(COD_PROD)) == 1) {
                botaoEditar.setEnabled(false);
            } else {
                botaoEditar.setEnabled(true);
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_tabelaConsultaMouseClicked

    private void tipoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoPesquisaActionPerformed

    private void botaoPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisarActionPerformed
        new Thread() {
            @Override
            public void run() {
                pesquisarProduto();
            }
        }.start();
    }//GEN-LAST:event_botaoPesquisarActionPerformed

    private void botaoMostrarUltimosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMostrarUltimosActionPerformed
        new Thread() {
            @Override
            public void run() {
                mostrarTodos();
            }
        }.start();
    }//GEN-LAST:event_botaoMostrarUltimosActionPerformed

    private void botaoSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecionarActionPerformed
        COD_PROD = tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString();
        new Thread() {
            @Override
            public void run() {
                OrcamentoPrincipalFrame.carregaProdutos(COD_PROD);
            }
        }.start();
        this.dispose();
    }//GEN-LAST:event_botaoSelecionarActionPerformed

    private void botaoEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEditarActionPerformed
        carregaEdicao();
    }//GEN-LAST:event_botaoEditarActionPerformed

    private void botaoClonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoClonarActionPerformed
        carregaClonagem();
    }//GEN-LAST:event_botaoClonarActionPerformed

    private void alturaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alturaProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_alturaProdutoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        limpa();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jtfDescricaoPeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfDescricaoPeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescricaoPeKeyPressed

    private void btnSalvarPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPeActionPerformed
        new Thread() {
            @Override
            public void run() {
                try {
                    loading.setVisible(true);
                    loading.setText("SALVANDO...");

                    //VERIFICA CONDIÇÕES------------------------------------------------
                    if (jtfDescricaoPe.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "INSIRA A DESCRIÇÃO DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (Double.valueOf(jftfLarguraPe.getText().replace(",", ".")) == 0d) {
                        JOptionPane.showMessageDialog(null, "INSIRA A LARGURA DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (Double.valueOf(jftfAlturaPe.getText().replace(",", ".")) == 0d) {
                        JOptionPane.showMessageDialog(null, "INSIRA A ALTURA DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (Double.valueOf(jftfEspessuraPe.getText().replace(",", ".")) == 0d) {
                        JOptionPane.showMessageDialog(null, "INSIRA A ESPESSURA DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (Double.valueOf(jftfPesoPe.getText().replace(",", ".")) == 0d) {
                        JOptionPane.showMessageDialog(null, "INSIRA O PESO DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (jsfQtdFolhasPe.getValue() == 0) {
                        JOptionPane.showMessageDialog(null, "A QUANTIDADE DE FOLHAS NÃO PODE SER IGUAL À ZERO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (jcbTipoPe.getSelectedIndex() == 0) {
                        JOptionPane.showMessageDialog(null, "SELECIONE O TIPO DO PRODUTO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (!jckbProdPreVenda.isSelected()) {
                        if (Double.valueOf(jftfVlrUnitPe.getText().replace(",", ".")) == 0d) {
                            JOptionPane.showMessageDialog(null, "DIGITE O VALOR UNITÁRIO DO PRODUTO", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                    }
                    if (jckbProm.isSelected()) {
                        if (Double.valueOf(jftfVlrProm.getText().replace(",", ".")) == 0d) {
                            JOptionPane.showMessageDialog(null, "DIGITE O VALOR PROMOCIONAL DO PRODUTO", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jdcInicioProm.getDate() == null) {
                            JOptionPane.showMessageDialog(null, "DIGITE A DATA DE INÍCIO DA PROMOÇÃO", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                        if (jdcFimProm.getDate() == null) {
                            JOptionPane.showMessageDialog(null, "DIGITE A DATA FIM DA PROMOÇÃO", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                    }
                    if (Integer.valueOf(jftfEstoqueFisico.getText().replace(",", ".")) == 0) {
                        JOptionPane.showMessageDialog(null, "O ESTOQUE FÍSICO DO PRODUTO NÃO PODE SER IGUAL À ZERO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (Integer.valueOf(jftfQtdMin.getText()) == 0) {
                        JOptionPane.showMessageDialog(null, "A QUANTIDADE MÍNIMA PARA PEDIDO DO PRODUTO NÃO PODE SER IGUAL À ZERO", "ERRO",
                                JOptionPane.ERROR_MESSAGE);
                        loading.setVisible(false);
                        return;
                    }
                    if (jckbQtdMax.isSelected()) {
                        if (Integer.valueOf(jftfQtdMax.getText().replace(",", ".")) == 0) {
                            JOptionPane.showMessageDialog(null, "A QUANTIDADE MÁXIMA PARA PEDIDO DO PRODUTO NÃO PODE SER IGUAL À ZERO", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                    }
                    if (FUNCAO != 1 & FUNCAO != 3) {
                        if (ProdutoDAO.verificaDescPe(jtfDescricaoPe.getText())) {
                            JOptionPane.showMessageDialog(null, "A DESCRIÇÃO DO PRODUTO JÁ EXISTE", "ERRO",
                                    JOptionPane.ERROR_MESSAGE);
                            loading.setVisible(false);
                            return;
                        }
                    }
                    //------------------------------------------------------------------

                    //SALVA O PRODUTO---------------------------------------------------
                    switch (FUNCAO) {
                        case 1:
                            ProdutoDAO.editaPe(new ProdutoPrEntBEAN(COD_PROD,
                                    jtfDescricaoPe.getText().toUpperCase(),
                                    Float.valueOf(jftfLarguraPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfAlturaPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfEspessuraPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfPesoPe.getText().replace(",", ".")),
                                    jckbDispVendas.isSelected() ? (byte) 1 : (byte) 0,
                                    jckbProdPreVenda.isSelected() ? (byte) 1 : (byte) 0,
                                    jckbProm.isSelected() ? (byte) 1 : (byte) 0,
                                    Double.valueOf(jftfVlrProm.getText().replace(",", ".")),
                                    jdcInicioProm.getDate(),
                                    jdcFimProm.getDate(),
                                    jsfQtdFolhasPe.getValue(),
                                    Integer.valueOf(jftfEstoqueFisico.getValue().toString()),
                                    jckbAvisoEstoque.isSelected() ? (byte) 1 : (byte) 0,
                                    Integer.valueOf(jftfAvisoEstoque.getValue().toString()),
                                    String.valueOf(jcbTipoPe.getSelectedItem()),
                                    Double.valueOf(jftfVlrUnitPe.getValue().toString()),
                                    new java.sql.Timestamp(new Date().getTime()),
                                    Integer.valueOf(jftfQtdMin.getText()),
                                    jckbQtdMax.isSelected() ? (byte) 1 : (byte) 0,
                                    Integer.valueOf(jftfQtdMax.getText())
                            ));
                            //INTERAÇÃO COM O USUÁRIO---------------------------------------
                            JOptionPane.showMessageDialog(null, "PRODUTO EDITADO COM SUCESSO COM SUCESSO. >> CÓDIGO: "
                                    + COD_PROD, "CONFIMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
                            //--------------------------------------------------------------

                            break;
                        case 3:
                            ProdutoDAO.atualizaEstPe(new ProdutoPrEntBEAN(
                                    COD_PROD,
                                    Integer.valueOf(jftfEstoqueFisico.getValue().toString()),
                                    jckbAvisoEstoque.isSelected() ? (byte) 1 : (byte) 0,
                                    Integer.valueOf(jftfAvisoEstoque.getText())
                            ));
                            JOptionPane.showMessageDialog(null, "INFORMAÇÕES ATUALIZADAS COM SUCESSO.",
                                    "CONFIMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
                            //--------------------------------------------------------------
                            break;
                        default:
                            COD_PROD = ProdutoDAO.retornaCodPe();
                            ProdutoDAO.inserePe(new ProdutoPrEntBEAN(COD_PROD,
                                    jtfDescricaoPe.getText().toUpperCase(),
                                    Float.valueOf(jftfLarguraPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfAlturaPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfEspessuraPe.getText().replace(",", ".")),
                                    Float.valueOf(jftfPesoPe.getText().replace(",", ".")),
                                    jckbDispVendas.isSelected() ? (byte) 1 : (byte) 0,
                                    jckbProdPreVenda.isSelected() ? (byte) 1 : (byte) 0,
                                    jckbProm.isSelected() ? (byte) 1 : (byte) 0,
                                    Double.valueOf(jftfVlrProm.getText().replace(",", ".")),
                                    jdcInicioProm.getDate(),
                                    jdcFimProm.getDate(),
                                    jsfQtdFolhasPe.getValue(),
                                    Integer.valueOf(jftfEstoqueFisico.getValue().toString()),
                                    jckbAvisoEstoque.isSelected() ? (byte) 1 : (byte) 0,
                                    Integer.valueOf(jftfAvisoEstoque.getValue().toString()),
                                    String.valueOf(jcbTipoPe.getSelectedItem()),
                                    Double.valueOf(jftfVlrUnitPe.getValue().toString()),
                                    new java.sql.Timestamp(new Date().getTime()),
                                    Integer.valueOf(jftfQtdMin.getText()),
                                    jckbQtdMax.isSelected() ? (byte) 1 : (byte) 0,
                                    Integer.valueOf(jftfQtdMax.getText())
                            ));
                            //INTERAÇÃO COM O USUÁRIO---------------------------------------
                            JOptionPane.showMessageDialog(null, "PRODUTO SALVO COM SUCESSO COM SUCESSO. >> CÓDIGO: "
                                    + COD_PROD, "CONFIMAÇÃO", JOptionPane.INFORMATION_MESSAGE);
                            //--------------------------------------------------------------
                            break;
                    }
                    //------------------------------------------------------------------

                    //RESETA CAMPOS-----------------------------------------------------
                    limpaPe();
                    //------------------------------------------------------------------

                    /**
                     * Reseta a função
                     */
                    FUNCAO = 0;
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
                loading.setVisible(false);
                estadoInicialPe();
            }
        }.start();
    }//GEN-LAST:event_btnSalvarPeActionPerformed

    private void jcbTipoPeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbTipoPeItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbTipoPeItemStateChanged

    private void btnLimparPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparPeActionPerformed
        limpaPe();
    }//GEN-LAST:event_btnLimparPeActionPerformed

    private void jftfAlturaPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftfAlturaPeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftfAlturaPeActionPerformed

    private void jckbAvisoEstoqueItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckbAvisoEstoqueItemStateChanged
        if (jckbAvisoEstoque.isSelected()) {
            jftfAvisoEstoque.setEnabled(true);
        } else {
            jftfAvisoEstoque.setEnabled(false);
        }
    }//GEN-LAST:event_jckbAvisoEstoqueItemStateChanged

    private void tblConsultaPeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblConsultaPeKeyTyped

    }//GEN-LAST:event_tblConsultaPeKeyTyped

    private void tblConsultaPeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblConsultaPeKeyReleased
        new Thread() {
            @Override
            public void run() {
                mouseClicked();
            }
        }.start();
    }//GEN-LAST:event_tblConsultaPeKeyReleased

    private void tblConsultaPeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultaPeMouseClicked
        new Thread() {
            @Override
            public void run() {
                mouseClicked();
            }
        }.start();
    }//GEN-LAST:event_tblConsultaPeMouseClicked

    private void btnClonarPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClonarPeActionPerformed
        try {
            loading.setVisible(true);
            loading.setText("CARREGANDO...");

            COD_PROD = tblConsultaPe.getValueAt(tblConsultaPe.getSelectedRow(), 0).toString();

            //CARREGA OS DADOS DO BD--------------------------------------------
            ProdutoPrEntBEAN produto = ProdutoDAO.retornaPeEdicao(COD_PROD);
            //------------------------------------------------------------------

            //PREENCHE OS CAMPOS------------------------------------------------
            jtfDescricaoPe.setText(produto.getDescricao());
            jftfLarguraPe.setValue(produto.getLargura());
            jftfAlturaPe.setValue(produto.getAltura());
            jftfEspessuraPe.setValue(produto.getEspessura());
            jftfPesoPe.setValue(produto.getPeso());
            jsfQtdFolhasPe.setValue(produto.getQtdPaginas());
            jcbTipoPe.setSelectedItem(produto.getTipo());
            jckbProdPreVenda.setSelected((produto.getPreVenda() == 1));
            jftfVlrUnitPe.setValue(produto.getVlrUnit());
            if (produto.getPromocao() == 1) {
                jckbProm.setSelected(produto.getPromocao() == 1);
                jftfVlrProm.setValue(produto.getVlrPromocao());
                jdcInicioProm.setDate(produto.getInicioPromocao());
                jdcFimProm.setDate(produto.getFimPromocao());
            }
            jftfEstoqueFisico.setValue(produto.getEstoque());
            if (produto.getAvisoEstoque() == 1) {
                jckbAvisoEstoque.setSelected(produto.getAvisoEstoque() == 1);
                jftfAvisoEstoque.setValue(produto.getAvisoEstoqueUn());
            }
            jftfQtdMin.setValue(produto.getPdQtdMin());
            if (produto.getPdMax() == 1) {
                jckbQtdMax.setSelected(produto.getPdMax() == 1);
                jftfQtdMax.setValue(produto.getPdQtdMax());
            }
            //------------------------------------------------------------------

            //SELECIONA A ABA NOVO/EDITAR---------------------------------------
            //------------------------------------------------------------------
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
        tabPane.setSelectedIndex(2);
        loading.setVisible(false);
        FUNCAO = 2;
    }//GEN-LAST:event_btnClonarPeActionPerformed

    private void btnEditarPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPeActionPerformed
        estadoInicialPe();
        new Thread() {
            @Override
            public void run() {
                try {
                    loading.setText("CARREGANDO...");
                    loading.setVisible(true);

                    COD_PROD = tblConsultaPe.getValueAt(tblConsultaPe.getSelectedRow(), 0).toString();

                    //CARREGA OS DADOS DO BD------------------------------------
                    ProdutoPrEntBEAN produto = ProdutoDAO.retornaPeEdicao(COD_PROD);
                    //----------------------------------------------------------

                    //PREENCHE OS CAMPOS----------------------------------------
                    jtfDescricaoPe.setText(produto.getDescricao());
                    jftfLarguraPe.setValue(produto.getLargura());
                    jftfAlturaPe.setValue(produto.getAltura());
                    jftfEspessuraPe.setValue(produto.getEspessura());
                    jftfPesoPe.setValue(produto.getPeso());
                    jsfQtdFolhasPe.setValue(produto.getQtdPaginas());
                    jcbTipoPe.setSelectedItem(produto.getTipo());
                    jckbProdPreVenda.setSelected((produto.getPreVenda() == 1));
                    jftfVlrUnitPe.setValue(produto.getVlrUnit());
                    if (produto.getPromocao() == 1) {
                        jckbProm.setSelected(produto.getPromocao() == 1);
                        jftfVlrProm.setValue(produto.getVlrPromocao());
                        jdcInicioProm.setDate(produto.getInicioPromocao());
                        jdcFimProm.setDate(produto.getFimPromocao());
                    }
                    jftfEstoqueFisico.setValue(produto.getEstoque());
                    if (produto.getAvisoEstoque() == 1) {
                        jckbAvisoEstoque.setSelected(produto.getAvisoEstoque() == 1);
                        jftfAvisoEstoque.setValue(produto.getAvisoEstoqueUn());
                    }
                    jftfQtdMin.setValue(produto.getPdQtdMin());
                    if (produto.getPdMax() == 1) {
                        jckbQtdMax.setSelected(produto.getPdMax() == 1);
                        jftfQtdMax.setValue(produto.getPdQtdMax());
                    }
                    lblMov.setText("ÚLTIMA MOVIMENTAÇÃO: " + produto.getUltMov());
                    //----------------------------------------------------------

                    //SELECIONA A ABA NOVO/EDITAR-------------------------------
                    tabPane.setSelectedIndex(2);
                    //----------------------------------------------------------

                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
                loading.setVisible(false);
            }
        }.start();
        FUNCAO = 1;
    }//GEN-LAST:event_btnEditarPeActionPerformed

    private void btnSelPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelPeActionPerformed
        COD_PROD = tblConsultaPe.getValueAt(tblConsultaPe.getSelectedRow(), 0).toString();
        new Thread() {
            @Override
            public void run() {
                OrcamentoPrincipalFrame.carregaProdutos(COD_PROD);
            }
        }.start();
        this.dispose();
    }//GEN-LAST:event_btnSelPeActionPerformed

    private void btnMostrarUltPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarUltPeActionPerformed
        try {
            DefaultTableModel modeloConsulta = (DefaultTableModel) tblConsultaPe.getModel();
            modeloConsulta.setNumRows(0);
            for (ProdutoPrEntBEAN produto : ProdutoDAO.pesquisaPe((byte) 3, null)) {
                modeloConsulta.addRow(new Object[]{
                    produto.getCodigo(),
                    produto.getDescricao(),
                    produto.getVlrUnit(),
                    produto.getEstoque(),
                    (produto.getPreVenda() == 1),
                    (produto.getPromocao() == 1)
                });
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_btnMostrarUltPeActionPerformed

    private void btnPesqPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesqPeActionPerformed
        try {
            DefaultTableModel modeloConsulta = (DefaultTableModel) tblConsultaPe.getModel();
            modeloConsulta.setNumRows(0);
            switch (tipoPesqPe.getSelectedIndex()) {
                case 0:
                    JOptionPane.showMessageDialog(null, "SELECIONE UM TIPO DE PESQUISA", "ERRO",
                            JOptionPane.ERROR_MESSAGE);
                    break;
                case 1:
                    for (ProdutoPrEntBEAN produto : ProdutoDAO.pesquisaPe((byte) 1,
                            textoPesqPe.getText())) {
                        modeloConsulta.addRow(new Object[]{
                            produto.getCodigo(),
                            produto.getDescricao(),
                            produto.getVlrUnit(),
                            produto.getEstoque(),
                            (produto.getPreVenda() == 1),
                            (produto.getPromocao() == 1)
                        });
                    }
                    break;
                case 2:
                    for (ProdutoPrEntBEAN produto : ProdutoDAO.pesquisaPe((byte) 2,
                            textoPesqPe.getText())) {
                        modeloConsulta.addRow(new Object[]{
                            produto.getCodigo(),
                            produto.getDescricao(),
                            produto.getVlrUnit(),
                            produto.getEstoque(),
                            (produto.getPreVenda() == 1),
                            (produto.getPromocao() == 1)
                        });
                    }
                    break;
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }//GEN-LAST:event_btnPesqPeActionPerformed

    private void altEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altEstoqueActionPerformed
        new Thread() {
            @Override
            public void run() {
                estadoAlterarEstoque();
                try {
                    loading.setText("CARREGANDO...");
                    loading.setVisible(true);

                    COD_PROD = tblConsultaPe.getValueAt(tblConsultaPe.getSelectedRow(), 0).toString();

                    /**
                     * Carrega mais informações sobre o produto
                     */
                    ProdutoPrEntBEAN produto = ProdutoDAO.retornaPeEdicao(COD_PROD);

                    /**
                     * Preenche GUI
                     */
                    jtfDescricaoPe.setText(produto.getDescricao());
                    jftfLarguraPe.setValue(produto.getLargura());
                    jftfAlturaPe.setValue(produto.getAltura());
                    jftfEspessuraPe.setValue(produto.getEspessura());
                    jftfPesoPe.setValue(produto.getPeso());
                    jsfQtdFolhasPe.setValue(produto.getQtdPaginas());
                    jcbTipoPe.setSelectedItem(produto.getTipo());
                    jckbProdPreVenda.setSelected((produto.getPreVenda() == 1));
                    jftfVlrUnitPe.setValue(produto.getVlrUnit());
                    if (produto.getPromocao() == 1) {
                        jckbProm.setSelected(produto.getPromocao() == 1);
                        jftfVlrProm.setValue(produto.getVlrPromocao());
                        jdcInicioProm.setDate(produto.getInicioPromocao());
                        jdcFimProm.setDate(produto.getFimPromocao());
                    }
                    jftfEstoqueFisico.setValue(produto.getEstoque());
                    if (produto.getAvisoEstoque() == 1) {
                        jckbAvisoEstoque.setSelected(produto.getAvisoEstoque() == 1);
                        jftfAvisoEstoque.setValue(produto.getAvisoEstoqueUn());
                    }
                    jftfQtdMin.setValue(produto.getPdQtdMin());
                    if (produto.getPdMax() == 1) {
                        jckbQtdMax.setSelected(produto.getPdMax() == 1);
                        jftfQtdMax.setValue(produto.getPdQtdMax());
                    }

                    /**
                     * Seleciona a aba 2
                     */
                    tabPane.setSelectedIndex(2);

                    /**
                     * Define a função como alterar estoque
                     */
                    FUNCAO = 3;
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
                loading.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_altEstoqueActionPerformed

    private void jftfEspessuraPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftfEspessuraPeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftfEspessuraPeActionPerformed

    private void jckbPromItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckbPromItemStateChanged
        if (jckbProm.isSelected()) {
            jftfVlrProm.setEnabled(true);
            jdcInicioProm.setEnabled(true);
            jdcFimProm.setEnabled(true);
        } else {
            jftfVlrProm.setEnabled(false);
            jdcInicioProm.setEnabled(false);
            jdcFimProm.setEnabled(false);
        }
    }//GEN-LAST:event_jckbPromItemStateChanged

    private void jftfPesoPeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftfPesoPeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftfPesoPeActionPerformed

    private void jckbQtdMaxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckbQtdMaxItemStateChanged
        if (jckbQtdMax.isSelected()) {
            jftfQtdMax.setEnabled(true);
        } else {
            jftfQtdMax.setEnabled(false);
        }
    }//GEN-LAST:event_jckbQtdMaxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton altEstoque;
    private javax.swing.JFormattedTextField alturaProduto;
    private javax.swing.JButton botaoClonar;
    private javax.swing.JButton botaoEditar;
    private javax.swing.JButton botaoMostrarUltimos;
    private javax.swing.JButton botaoPesquisar;
    public static javax.swing.JButton botaoSelecionar;
    private javax.swing.JButton btnClonarPe;
    private javax.swing.JButton btnEditarPe;
    private javax.swing.JButton btnLimparPe;
    private javax.swing.JButton btnMostrarUltPe;
    private javax.swing.JButton btnPesqPe;
    private javax.swing.JButton btnSalvarPe;
    public static javax.swing.JButton btnSelPe;
    public static javax.swing.JFormattedTextField codigoPapel;
    public static javax.swing.JButton concluirPapel;
    public static com.toedter.components.JSpinField coresFrente;
    public static com.toedter.components.JSpinField coresVerso;
    private javax.swing.JTextField descricaoProduto;
    private javax.swing.JCheckBox disponivelVendas;
    private javax.swing.JButton inserirPapel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public static javax.swing.JComboBox<String> jcbTipoPe;
    private javax.swing.JCheckBox jckbAvisoEstoque;
    private javax.swing.JCheckBox jckbDispVendas;
    private javax.swing.JCheckBox jckbProdPreVenda;
    private javax.swing.JCheckBox jckbProm;
    private javax.swing.JCheckBox jckbQtdMax;
    public static com.toedter.calendar.JDateChooser jdcFimProm;
    public static com.toedter.calendar.JDateChooser jdcInicioProm;
    private javax.swing.JFormattedTextField jftfAlturaPe;
    private javax.swing.JFormattedTextField jftfAvisoEstoque;
    private javax.swing.JFormattedTextField jftfEspessuraPe;
    private javax.swing.JFormattedTextField jftfEstoqueFisico;
    private javax.swing.JFormattedTextField jftfLarguraPe;
    private javax.swing.JFormattedTextField jftfPesoPe;
    private javax.swing.JFormattedTextField jftfQtdMax;
    private javax.swing.JFormattedTextField jftfQtdMin;
    private javax.swing.JFormattedTextField jftfVlrProm;
    private javax.swing.JFormattedTextField jftfVlrUnitPe;
    private com.toedter.components.JSpinField jsfQtdFolhasPe;
    private javax.swing.JTextField jtfDescricaoPe;
    private javax.swing.JFormattedTextField larguraProduto;
    private javax.swing.JLabel lblMov;
    public static javax.swing.JFormattedTextField orelha;
    private javax.swing.JButton pesquisar_acabamentos;
    private com.toedter.components.JSpinField quantidadeFolhas;
    private javax.swing.JButton retirarAcabamento;
    private javax.swing.JButton retirarPapel;
    private javax.swing.JButton salvar;
    private javax.swing.JTabbedPane tabPane;
    public static javax.swing.JTable tabelaAcabamentos;
    public static javax.swing.JTable tabelaConsulta;
    public static javax.swing.JTable tabelaPapel;
    public static javax.swing.JTable tblConsultaPe;
    private javax.swing.JTextField textoPesqPe;
    private javax.swing.JTextField textoPesquisa;
    public static javax.swing.JComboBox<String> tipoPapel;
    private javax.swing.JComboBox<String> tipoPesqPe;
    private javax.swing.JComboBox<String> tipoPesquisa;
    public static javax.swing.JComboBox<String> tipoProduto;
    // End of variables declaration//GEN-END:variables

    //TABELA CONSULTA-----------------------------------------------------------
    private void mouseClicked() {
        try {
            COD_PROD = tblConsultaPe.getValueAt(tblConsultaPe.getSelectedRow(), 0).toString();

            if (ProdutoDAO.verificaUsoProdPe(COD_PROD)) {
                btnEditarPe.setEnabled(false);
                altEstoque.setEnabled(true);

            } else {
                btnEditarPe.setEnabled(true);
                altEstoque.setEnabled(false);
            }
            btnClonarPe.setEnabled(true);

            if (SEL_ORC) {
                btnSelPe.setEnabled(true);
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }
    //--------------------------------------------------------------------------

    //ESTADOS-------------------------------------------------------------------
    public void estado1Papel() {
        codigoPapel.setEnabled(false);
        codigoPapel.setText(null);
        descricaoPapel = null;
        tipoPapel.setEnabled(false);
        coresFrente.setEnabled(false);
        coresVerso.setEnabled(false);
        concluirPapel.setEnabled(false);
        coresFrente.setValue(0);
        coresVerso.setValue(0);
        orelha.setValue(0);
        orelha.setEnabled(false);
        tipoPapel.setSelectedIndex(0);
    }

    public void estado2Papel() {
        codigoPapel.setEnabled(false);
        tipoPapel.setEnabled(true);
        coresFrente.setEnabled(true);
        coresVerso.setEnabled(true);
        concluirPapel.setEnabled(true);
        if (tipoProduto.getSelectedItem().equals("LIVRO")) {
            orelha.setEnabled(true);
        } else {
            orelha.setEnabled(false);
        }
    }

    private void estadoAlterarEstoque() {
        jtfDescricaoPe.setEditable(false);
        jftfLarguraPe.setEditable(false);
        jftfAlturaPe.setEditable(false);
        jftfEspessuraPe.setEditable(false);
        jftfPesoPe.setEditable(false);
        jsfQtdFolhasPe.setEnabled(false);
        jcbTipoPe.setEnabled(false);
        jckbProdPreVenda.setEnabled(true);
        jftfVlrUnitPe.setEnabled(true);
        jckbProm.setEnabled(true);
        jftfEstoqueFisico.setEnabled(true);
        jckbAvisoEstoque.setEnabled(true);
        jftfQtdMin.setEnabled(true);
        jckbQtdMax.setEnabled(true);
        jckbDispVendas.setEnabled(true);
    }

    private void estadoInicialPe() {
        jtfDescricaoPe.setEditable(true);
        jftfLarguraPe.setEditable(true);
        jftfAlturaPe.setEditable(true);
        jftfEspessuraPe.setEditable(true);
        jftfPesoPe.setEditable(true);
        jsfQtdFolhasPe.setEnabled(true);
        jcbTipoPe.setEnabled(true);
        jckbProdPreVenda.setEnabled(true);
        jftfVlrUnitPe.setEnabled(true);
        jckbProm.setEnabled(true);
        jftfEstoqueFisico.setEnabled(true);
        jckbAvisoEstoque.setEnabled(true);
        jftfQtdMin.setEnabled(true);
        jckbQtdMax.setEnabled(true);
        jckbDispVendas.setEnabled(true);
    }

    public void limpa() {
        COD_PROD = null;
        FUNCAO = 0;
        descricaoProduto.setText("");
        larguraProduto.setText("");
        alturaProduto.setText("");
        quantidadeFolhas.setValue(1);
        DefaultTableModel modeloPapel = (DefaultTableModel) tabelaPapel.getModel();
        modeloPapel.setNumRows(0);
        DefaultTableModel modeloAcabamentos = (DefaultTableModel) tabelaAcabamentos.getModel();
        modeloAcabamentos.setNumRows(0);
        estado1Papel();
        COD_PROD = null;
    }

    public void limpaPe() {
        jtfDescricaoPe.setText("");
        jftfLarguraPe.setValue(0);
        jftfAlturaPe.setValue(0);
        jftfEspessuraPe.setValue(0);
        jftfPesoPe.setValue(0);
        jsfQtdFolhasPe.setValue(1);
        jcbTipoPe.setSelectedIndex(0);
        jckbProdPreVenda.setSelected(false);
        jftfVlrUnitPe.setValue(0);
        jckbProm.setSelected(false);
        jftfVlrProm.setValue(0);
        jdcInicioProm.setDate(null);
        jdcFimProm.setDate(null);
        jftfEstoqueFisico.setValue(0);
        jckbAvisoEstoque.setSelected(false);
        jftfAvisoEstoque.setValue(0);
        jftfQtdMin.setValue(0);
        jckbQtdMax.setSelected(false);
        jftfQtdMax.setValue(0);
        lblMov.setText("");
        FUNCAO = 0;
        COD_PROD = null;
    }
    //--------------------------------------------------------------------------

    private static int mdc(int a, int b) {
        while (b != 0) {
            int r = a % b;
            a = b;
            b = r;
        }
        return a;
    }

    private static int mmc(int a, int b) {
        return a * (b / mdc(a, b));
    }

    private void carregaClonagem() {
        try {
            this.setTitle("CLONANDO PRODUTO " + COD_PROD);
            loading.setVisible(true);
            loading.setText("CARREGANDO CLONAGEM...");

            limpa();
            COD_PROD = tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString();
            FUNCAO = 2;

            ProdutoBEAN produto = ProdutoDAO.retornaInfoProd(COD_PROD);
            descricaoProduto.setText(produto.getDescricao());
            larguraProduto.setValue(produto.getLargura());
            alturaProduto.setValue(produto.getAltura());
            quantidadeFolhas.setValue(produto.getQuantidadeFolhas());
            tipoProduto.setSelectedItem(produto.getTipoProduto());
            disponivelVendas.setSelected(produto.getDisponivelVendas() == 1 ? true : false);

            DefaultTableModel modeloPapeis = (DefaultTableModel) ProdutoFrame.tabelaPapel.getModel();
            for (PapelBEAN bean : ProdutoDAO.retornaInformacoesPapel(Integer.valueOf(COD_PROD))) {
                modeloPapeis.addRow(new Object[]{
                    bean.getCodigo(),
                    bean.getDescricaoPapel(),
                    bean.getTipoPapel(),
                    bean.getOrelha(),
                    bean.getCorFrente(),
                    bean.getCorVerso()
                });
            }

            try {
                DefaultTableModel modeloAcabamentos = (DefaultTableModel) ProdutoFrame.tabelaAcabamentos.getModel();
                for (AcabamentoProdBEAN bean : AcabamentoDAO.retornaAcabamentosProduto(COD_PROD)) {
                    modeloAcabamentos.addRow(new Object[]{
                        bean.getCodigoAcabamento(),
                        AcabamentoDAO.retornaDescricaoAcabamentos(bean.getCodigoAcabamento())
                    });
                }
            } catch (SemAcabamentoException ex) {
                //NENHUMA AÇÃO
            }
            tabPane.setSelectedIndex(0);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }

        loading.setVisible(false);
    }

    private void salvarProduto() {
        try {
            loading.setText("SALVANDO...");
            loading.setVisible(true);

            ProdutoBEAN produto = new ProdutoBEAN();
            PapelBEAN papeisCadastroBEAN = new PapelBEAN();
            AcabamentoProdBEAN produtosComponentesBEAN = new AcabamentoProdBEAN();

            switch (FUNCAO) {
                case 1:
                    produto.setCodigo(COD_PROD);
                    break;
                case 0:
                case 2:
                    COD_PROD = String.valueOf(ProdutoDAO.retornaUltimoRegistro() + 1);
                    produto.setCodigo(COD_PROD);
                    break;
            }

            //VERIFICA CASOS DE ERRO--------------------------------------------
            if (ProdutoDAO.verificaDescricao(descricaoProduto.getText())
                    & FUNCAO != 1) {
                JOptionPane.showMessageDialog(null, "DESCRIÇÃO DE PRODUTO JÁ EXISTENTE!", "ERRO AO SALVAR", JOptionPane.ERROR_MESSAGE);
                loading.setVisible(false);
                return;
            } else {
                if (descricaoProduto.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "INSIRA UM CONTEÚDO NO CAMPO DESCRIÇÃO!", "ERRO AO SALVAR", JOptionPane.ERROR_MESSAGE);
                    loading.setVisible(false);
                    return;
                }
                if (descricaoProduto.getText().length() >= 150) {
                    JOptionPane.showMessageDialog(null, "O CAMPO DESCRIÇÃO DO PRODUTO EXCEDE 150 CARACTERES", "LIMITE DE CARACTERES", JOptionPane.ERROR_MESSAGE);
                    loading.setVisible(false);
                    return;
                } else {
                    produto.setDescricao(descricaoProduto.getText().toUpperCase());
                }
            }

            if (larguraProduto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "INSIRA UM CONTEÚDO NO CAMPO LARGURA", "ERRO AO SALVAR", JOptionPane.ERROR_MESSAGE);
                loading.setVisible(false);
                return;
            } else {
                String n2 = String.valueOf(larguraProduto.getValue().toString());
                n2 = n2.replace(",", ".");
                produto.setLargura(Float.valueOf(n2));
            }

            if (alturaProduto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "INSIRA UM CONTEÚDO NO CAMPO ALTURA.");
                loading.setVisible(false);
                return;
            } else {
                String n2 = String.valueOf(alturaProduto.getValue().toString());
                n2 = n2.replace(",", ".");
                produto.setAltura(Float.valueOf(n2));
            }

            if (tabelaPapel.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "PRODUTO SEM PAPEL!", "ERRO AO SALVAR", JOptionPane.ERROR_MESSAGE);
                loading.setVisible(false);
                return;
            }

            if (quantidadeFolhas.getValue() == 0) {
                JOptionPane.showMessageDialog(null, "A QUANTIDADE DE FOLHAS NÃO PODE SER 0!", "ERRO AO SALVAR", JOptionPane.ERROR_MESSAGE);
                loading.setVisible(false);
                return;
            }

            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "CONFIRMA A QUANTIDADE DE PÁGINAS DE '" + quantidadeFolhas.getValue() + "' ?\n (ISSO AFETARÁ NO CALCÚLO DE FOLHAS A SEREM UTILIZADAS)", "CONFIRMAÇÃO DE PÁGINAS", dialogButton);
            if (dialogResult != 0) {
                loading.setVisible(false);
                return;
            }

            produto.setQuantidadePaginas(quantidadeFolhas.getValue());

            if (tipoProduto.getSelectedItem().toString().equals("SELECIONE...")) {
                JOptionPane.showMessageDialog(null, "SELECIONE O TIPO DO PRODUTO.");
                loading.setVisible(false);
                return;
            } else {
                produto.setTipoProduto(tipoProduto.getSelectedItem().toString());
            }

            if (disponivelVendas.isSelected() == true) {
                produto.setDisponivelVendas(1);
            } else {
                produto.setDisponivelVendas(0);
            }

            dialogButton = JOptionPane.YES_NO_OPTION;
            dialogResult = JOptionPane.showConfirmDialog(this, "CONFIRMA O TIPO DE PRODUTO COMO '" + tipoProduto.getSelectedItem().toString() + "' ?\n (ISSO AFETARÁ NO CALCÚLO DE FOLHAS A SEREM UTILIZADAS)", "CONFIRMAÇÃO DE TIPO DE PRODUTO", dialogButton);
            if (dialogResult != 0) {
                loading.setVisible(false);
                return;
            }

            switch (FUNCAO) {
                case 1:
                    PapelDAO.exluiPapeisProduto(Integer.valueOf(COD_PROD));
                    AcabamentoDAO.excluiAcabamentosProduto(Integer.valueOf(COD_PROD));
                    ProdutoDAO.atualiza(produto);
                    break;
                case 0:
                case 2:
                    ProdutoDAO.cria(produto);
                    break;

            }

            switch (FUNCAO) {
                case 0:
                case 1:
                case 2:
                    if (tabelaPapel.getRowCount() > 0) {
                        for (int i = 0; i < tabelaPapel.getRowCount(); i++) {
                            papeisCadastroBEAN.setCod_produto(COD_PROD);
                            papeisCadastroBEAN.setCodPapel((int) tabelaPapel.getValueAt(i, 0));
                            papeisCadastroBEAN.setTipo_papel((String) tabelaPapel.getValueAt(i, 2));
                            papeisCadastroBEAN.setCor_frente((int) tabelaPapel.getValueAt(i, 4));
                            papeisCadastroBEAN.setCor_verso((int) tabelaPapel.getValueAt(i, 5));
                            papeisCadastroBEAN.setDescricaoPapel((String) tabelaPapel.getValueAt(i, 1));
                            papeisCadastroBEAN.setOrelha(Float.valueOf(tabelaPapel.getValueAt(i, 3).toString().replace(",", ".")));
                            PapelDAO.criaPplProduto(papeisCadastroBEAN);
                        }
                    }

                    if (tabelaAcabamentos.getRowCount() > 0) {
                        for (int i = 0; i < tabelaAcabamentos.getRowCount(); i++) {
                            produtosComponentesBEAN.setCodigoProduto(Integer.valueOf(COD_PROD));
                            produtosComponentesBEAN.setCodigoAcabamento((int) tabelaAcabamentos.getValueAt(i, 0));
                            AcabamentoDAO.criaAcabamentosProduto(produtosComponentesBEAN);
                        }
                    }
                    break;
            }

            JOptionPane.showMessageDialog(null, "PRODUTO Nº " + COD_PROD + " CADASTRADO COM SUCESSO!");
            disponivelVendas.setSelected(false);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
            loading.setVisible(false);
            return;
        }
        this.setTitle("CADASTRO DE PRODUTOS");
        loading.setVisible(false);

        limpa();
    }

    private void pesquisarProduto() {
        DefaultTableModel modeloConsulta = (DefaultTableModel) tabelaConsulta.getModel();
        modeloConsulta.setNumRows(0);
        if (tipoPesquisa.getSelectedItem().equals("SELECIONE...")) {
            JOptionPane.showMessageDialog(null, "SELECIONE UM TIPO DE PESQUISA!");
            return;
        } else {
            try {
                for (ProdutoBEAN cadastroProdutosBEAN : ProdutoDAO.pesquisaRegistro((String) tipoPesquisa.getSelectedItem(), textoPesquisa.getText().toString())) {
                    modeloConsulta.addRow(new Object[]{
                        cadastroProdutosBEAN.getCodigo(),
                        cadastroProdutosBEAN.getDescricao()});
                }
            } catch (SQLException ex) {
                EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                EnvioExcecao.envio();
            }

        }
    }

    private void mostrarTodos() {
        try {
            DefaultTableModel modeloConsulta = (DefaultTableModel) tabelaConsulta.getModel();
            modeloConsulta.setNumRows(0);
            for (ProdutoBEAN cadastroProdutosBEAN : ProdutoDAO.mostraTodos()) {
                modeloConsulta.addRow(new Object[]{
                    cadastroProdutosBEAN.getCodigo(),
                    cadastroProdutosBEAN.getDescricao()});
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }

    private void carregaEdicao() {
        try {
            this.setTitle("EDITANDO PRODUTO " + COD_PROD);
            loading.setVisible(true);
            loading.setText("CARREGANDO EDIÇÃO...");

            limpa();
            COD_PROD = tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0).toString();
            FUNCAO = 1;

            ProdutoBEAN produto = ProdutoDAO.retornaInfoProd(COD_PROD);
            descricaoProduto.setText(produto.getDescricao());
            larguraProduto.setValue(produto.getLargura());
            alturaProduto.setValue(produto.getAltura());
            quantidadeFolhas.setValue(produto.getQuantidadeFolhas());
            tipoProduto.setSelectedItem(produto.getTipoProduto());
            disponivelVendas.setSelected(produto.getDisponivelVendas() == 1 ? true : false);

            DefaultTableModel modeloPapeis = (DefaultTableModel) ProdutoFrame.tabelaPapel.getModel();
            for (PapelBEAN bean : ProdutoDAO.retornaInformacoesPapel(Integer.valueOf(COD_PROD))) {
                modeloPapeis.addRow(new Object[]{
                    bean.getCodigo(),
                    bean.getDescricaoPapel(),
                    bean.getTipoPapel(),
                    bean.getOrelha(),
                    bean.getCorFrente(),
                    bean.getCorVerso()
                });
            }

            try {
                DefaultTableModel modeloAcabamentos = (DefaultTableModel) ProdutoFrame.tabelaAcabamentos.getModel();
                for (AcabamentoProdBEAN bean : AcabamentoDAO.retornaAcabamentosProduto(COD_PROD)) {
                    modeloAcabamentos.addRow(new Object[]{
                        bean.getCodigoAcabamento(),
                        AcabamentoDAO.retornaDescricaoAcabamentos(bean.getCodigoAcabamento())
                    });
                }
            } catch (SemAcabamentoException ex) {
                //NENHUMA AÇÃO
            }
            tabPane.setSelectedIndex(0);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }

        loading.setVisible(false);
    }

}
