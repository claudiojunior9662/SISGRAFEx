/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.sproducao.controle.observacoes;

import exception.EnvioExcecao;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import model.tabelas.ObsOpTableModel;
import ui.controle.Controle;

/**
 *
 * @author claud
 */
public class ObservacaoOp extends javax.swing.JInternalFrame {

    /**
     * Creates new form AddObservacaoOp
     */
    private int codigoOp;
    private String obsAntiga;
    JLabel loading;
    ObsOpTableModel model = new ObsOpTableModel();
    private byte ESTADO = 0;
    /**
     * 1 - ADICIONANDO 2 - EDITANDO
     */

    private static ObservacaoOp relatoriosNotaVenda;

    public static ObservacaoOp getInstancia(JLabel loading, int codigoOp) {
        return new ObservacaoOp(loading, codigoOp);
    }

    public ObservacaoOp(JLabel loading, int codigoOp) {
        initComponents();
        this.loading = loading;
        this.codigoOp = codigoOp;

        tblConsulta.setModel(model);

        try {
            for (ObservacaoBEAN obs : ObservacaoDAO.carregaObs(codigoOp)) {
                model.addRow(obs);
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio(loading);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblConsulta = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtObservacao = new javax.swing.JTextArea();
        btnGravar = new javax.swing.JButton();
        btnAdicionar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("OBSERVAÇÕES DA OP");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N

        tblConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OP", "DATA", "OBSERVAÇÃO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblConsulta);

        txtObservacao.setEditable(false);
        txtObservacao.setColumns(20);
        txtObservacao.setLineWrap(true);
        txtObservacao.setRows(5);
        jScrollPane2.setViewportView(txtObservacao);

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        btnGravar.setText("GRAVAR");
        btnGravar.setEnabled(false);
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        btnAdicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/incluir.png"))); // NOI18N
        btnAdicionar.setText("ADICIONAR");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/editar.png"))); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancelar.png"))); // NOI18N
        btnExcluir.setText("EXCLUIR");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(btnAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGravar)
                    .addComponent(btnAdicionar)
                    .addComponent(btnEditar)
                    .addComponent(btnExcluir))
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
        ESTADO = 1;
        estadoAdicionarEditar();
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        try {
            /**
             * Verifica se foram inseridas observações
             */
            if (txtObservacao.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "INSIRA UMA OBSERVAÇÃO",
                        "ERRO",
                        JOptionPane.ERROR_MESSAGE);
                return;
            }

            switch (ESTADO) {
                case 1:
                    /**
                     * Adiciona a observação
                     */
                    ObservacaoDAO.insereObs(new ObservacaoBEAN(
                            codigoOp,
                            new Date(),
                            txtObservacao.getText()
                    ));
                    JOptionPane.showMessageDialog(null, "OBSERVAÇÃO INCLUÍDA COM SUCESSO!",
                            "CONFIRMAÇÃO",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;
                case 2:
                    /**
                     * Edita a observação
                     */
                    ObservacaoDAO.editaObs(new ObservacaoBEAN(
                            codigoOp,
                            new Date(),
                            txtObservacao.getText()
                    ), obsAntiga);
                    JOptionPane.showMessageDialog(null, "OBSERVAÇÃO MODIFICADA COM SUCESSO!",
                            "CONFIRMAÇÃO",
                            JOptionPane.INFORMATION_MESSAGE);
                    break;
            }

            model.setNumRows(0);
            for (ObservacaoBEAN obs : ObservacaoDAO.carregaObs(codigoOp)) {
                model.addRow(obs);
            }
            estadoExcluirGravar();
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio(loading);
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        ESTADO = 2;
        obsAntiga = txtObservacao.getText();
        estadoAdicionarEditar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tblConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultaMouseClicked
        txtObservacao.setText(model.getValueAt(tblConsulta.getSelectedRow()).getObservacao());
        btnEditar.setEnabled(true);
        btnExcluir.setEnabled(true);
    }//GEN-LAST:event_tblConsultaMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(
                    this,
                    "EXCLUIR OBSERVAÇÃO SELECIONADA?",
                    "CONFIRMAÇÃO DE EXCLUSÃO",
                    dialogButton
            );
            if (dialogResult == 0) {
                ObservacaoBEAN obsEx = model.getValueAt(tblConsulta.getSelectedRow());
                ObservacaoDAO.excluiObs(obsEx.getCodigoOp(), obsEx.getObservacao());
                JOptionPane.showMessageDialog(null, "OBSERVAÇÃO EXCLUÍDA COM SUCESSO!",
                        "CONFIRMAÇÃO",
                        JOptionPane.INFORMATION_MESSAGE);

                model.setNumRows(0);
                for (ObservacaoBEAN obs : ObservacaoDAO.carregaObs(codigoOp)) {
                    model.addRow(obs);
                }
                estadoExcluirGravar();
            } else {
                return;
            }
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio(loading);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblConsulta;
    private javax.swing.JTextArea txtObservacao;
    // End of variables declaration//GEN-END:variables

    public void estadoAdicionarEditar() {
        txtObservacao.setEditable(true);
        btnGravar.setEnabled(true);
        btnAdicionar.setEnabled(false);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        if (ESTADO == 1) {
            txtObservacao.setText("");
        }
    }

    public void estadoExcluirGravar() {
        txtObservacao.setEditable(false);
        btnGravar.setEnabled(false);
        btnAdicionar.setEnabled(true);
        btnEditar.setEnabled(false);
        btnExcluir.setEnabled(false);
        ESTADO = 0;
        txtObservacao.setText("");
    }
}
