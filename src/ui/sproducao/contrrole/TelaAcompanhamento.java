/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.sproducao.contrrole;

import connection.ConnectionFactory;
import javax.swing.table.DefaultTableModel;
import entidades.OrdemProducao;
import exception.EnvioExcecao;
import model.bean.TelaAcompanhamentoBEAN;
import model.dao.OrdemProducaoDAO;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import ui.administrador.FuncionarioBEAN;
import ui.administrador.FuncionarioDAO;
import ui.cadastros.clientes.ClienteDAO;
import ui.cadastros.produtos.ProdutoDAO;
import ui.controle.Controle;
import ui.principal.GerenteJanelas;
import ui.principal.Producao;

/**
 *
 * @author claud
 */
public class TelaAcompanhamento extends javax.swing.JInternalFrame {

    public static String botao = null;
    public static int numOp = 0;
    public static boolean realTime = true;

    private static JLabel loading;
    private GerenteJanelas gj;

    private static TelaAcompanhamento telaAcompanhamentoNovo;

    public static TelaAcompanhamento getInstancia(JLabel loading, GerenteJanelas gj) {
        return new TelaAcompanhamento(loading, gj);
    }

    /**
     * Creates new form TelaAcompanhamentoNovo
     */
    public TelaAcompanhamento(JLabel loading, GerenteJanelas gj) {
        initComponents();
        this.loading = loading;
        this.gj = gj;
        estado1();
        System.setProperty("vermelho1", "#FF0000");
        System.setProperty("vermelho2", "#FFA500");
        System.setProperty("amarelo1", "#FFD700");
        System.setProperty("amarelo2", "#FFFF00");
        System.setProperty("amarelo3", "#F0E68C");
        System.setProperty("verde1", "#00FF00");
        System.setProperty("verde2", "#00FF7F");
        System.setProperty("verde3", "#90EE90");
        System.setProperty("verde4", "#98FB98");
        qtdDiasOp.setValue(0);
        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaConsulta = new javax.swing.JTable();
        codOpFiltro = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        mesEmissao = new javax.swing.JRadioButton();
        status = new javax.swing.JRadioButton();
        codOpTexto = new javax.swing.JFormattedTextField();
        dataEntregaTexto = new com.toedter.calendar.JDateChooser();
        statusTexto = new javax.swing.JComboBox<>();
        aplicarTexto = new javax.swing.JButton();
        tempoReal = new javax.swing.JButton();
        produto = new javax.swing.JRadioButton();
        produtoTexto = new javax.swing.JTextField();
        dataEntrega = new javax.swing.JRadioButton();
        mesEmissaoSelecionar = new com.toedter.calendar.JMonthChooser();
        anoEmissaoSelecionar = new com.toedter.calendar.JYearChooser();
        mesEntregaSelecionar = new com.toedter.calendar.JMonthChooser();
        mesEntrega = new javax.swing.JRadioButton();
        anoEntregaSelecionar = new com.toedter.calendar.JYearChooser();
        jPanel2 = new javax.swing.JPanel();
        numeroOp = new javax.swing.JFormattedTextField();
        cliente = new javax.swing.JTextField();
        dataEntrada = new javax.swing.JTextField();
        dataPrevEntrega = new com.toedter.calendar.JDateChooser();
        jScrollPane2 = new javax.swing.JScrollPane();
        observacoesOrcamento = new javax.swing.JTextArea();
        tipoTrabalho = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        primeira_prova = new javax.swing.JButton();
        segunda_prova = new javax.swing.JButton();
        terceira_prova = new javax.swing.JButton();
        quarta_prova = new javax.swing.JButton();
        quinta_prova = new javax.swing.JButton();
        primeiraProva = new javax.swing.JLabel();
        segundaProva = new javax.swing.JLabel();
        terceiraProva = new javax.swing.JLabel();
        quartaProva = new javax.swing.JLabel();
        quintaProva = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        aprovacao_cliente = new javax.swing.JButton();
        entrega_final = new javax.swing.JButton();
        imposta_dir = new javax.swing.JButton();
        aprovacaoCliente = new javax.swing.JLabel();
        entregaFinal = new javax.swing.JLabel();
        impostaDirecao = new javax.swing.JLabel();
        envioDivisaoComercial = new javax.swing.JButton();
        envioDivCmcl = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        entrada_offset = new javax.swing.JButton();
        entrada_tipografia = new javax.swing.JButton();
        entrada_acabamento = new javax.swing.JButton();
        entradaOffset = new javax.swing.JLabel();
        entradaTipografia = new javax.swing.JLabel();
        entradaAcabamento = new javax.swing.JLabel();
        orcamentoBase = new javax.swing.JFormattedTextField();
        operadorSecao = new javax.swing.JComboBox<>();
        statusOrdemProducao = new javax.swing.JComboBox<>();
        codigoProduto = new javax.swing.JFormattedTextField();
        descricaoProduto = new javax.swing.JTextField();
        statusProgresso = new javax.swing.JLabel();
        statusAlteracoes = new javax.swing.JLabel();
        visualizarOrdemProducao = new javax.swing.JButton();
        btnGravar = new javax.swing.JButton();
        qtdDiasOp = new javax.swing.JFormattedTextField();
        jLabel11 = new javax.swing.JLabel();

        setTitle("TELA DE ACOMPANHAMENTO DE ORDEM DE PRODUÇÃO");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/producao.png"))); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        tabelaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nº", "DATA ENTREGA", "STATUS", "PRODUTO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaConsulta);

        buttonGroup1.add(codOpFiltro);
        codOpFiltro.setText("CÓDIGO OP");
        codOpFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codOpFiltroItemStateChanged(evt);
            }
        });
        codOpFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                codOpFiltroMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("FILTROS:");

        buttonGroup1.add(mesEmissao);
        mesEmissao.setText("MÊS DE EMISSÃO");
        mesEmissao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesEmissaoItemStateChanged(evt);
            }
        });
        mesEmissao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mesEmissaoMouseClicked(evt);
            }
        });

        buttonGroup1.add(status);
        status.setText("STATUS");
        status.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusItemStateChanged(evt);
            }
        });
        status.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusMouseClicked(evt);
            }
        });

        codOpTexto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        dataEntregaTexto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataEntregaTextoMouseClicked(evt);
            }
        });

        statusTexto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EM AVALIAÇÃO PELA SEÇ TÉCNICA", "ENCAMINHADO PARA PRÉ IMP", "DIAGRAMAÇÃO", "PRODUZINDO PROVA", "AGUARDANDO APR CLIENTE", "ENCAMINHADO PARA OFFSET", "ENCAMINHADO PARA TIPOGRAFIA", "ENCAMINHADO PARA ACABAMENTO", "EM FINALIZAÇÃO", "ENCAMINHADO PARA EXPEDIÇÃO" }));

        aplicarTexto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/confirma.png"))); // NOI18N
        aplicarTexto.setText("APLICAR");
        aplicarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aplicarTextoActionPerformed(evt);
            }
        });

        tempoReal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/atualizar.png"))); // NOI18N
        tempoReal.setText("TEMPO REAL (MÁXIMO 45 OP)");
        tempoReal.setToolTipText("ATUALIZA A TABELA A CADA 1 MINUTO");
        tempoReal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tempoRealActionPerformed(evt);
            }
        });

        buttonGroup1.add(produto);
        produto.setText("PRODUTO");
        produto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                produtoItemStateChanged(evt);
            }
        });
        produto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                produtoMouseClicked(evt);
            }
        });

        buttonGroup1.add(dataEntrega);
        dataEntrega.setText("DATA DE ENTREGA");
        dataEntrega.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                dataEntregaItemStateChanged(evt);
            }
        });
        dataEntrega.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataEntregaMouseClicked(evt);
            }
        });

        buttonGroup1.add(mesEntrega);
        mesEntrega.setText("MÊS DE ENTREGA");
        mesEntrega.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesEntregaItemStateChanged(evt);
            }
        });
        mesEntrega.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mesEntregaMouseClicked(evt);
            }
        });
        mesEntrega.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mesEntregaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(produto)
                            .addComponent(status)
                            .addComponent(dataEntrega)
                            .addComponent(codOpFiltro)
                            .addComponent(mesEntrega)
                            .addComponent(mesEmissao))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusTexto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(produtoTexto)
                            .addComponent(dataEntregaTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(codOpTexto)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mesEmissaoSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(mesEntregaSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(anoEntregaSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(anoEmissaoSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(tempoReal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(aplicarTexto)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10)
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codOpFiltro)
                    .addComponent(codOpTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataEntregaTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataEntrega))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mesEmissao)
                    .addComponent(mesEmissaoSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoEmissaoSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mesEntrega)
                    .addComponent(mesEntregaSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(anoEntregaSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(status)
                    .addComponent(statusTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(produto)
                    .addComponent(produtoTexto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aplicarTexto)
                    .addComponent(tempoReal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {anoEmissaoSelecionar, anoEntregaSelecionar, mesEmissao, mesEmissaoSelecionar, mesEntrega, mesEntregaSelecionar});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {dataEntrega, dataEntregaTexto});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {codOpFiltro, codOpTexto});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {status, statusTexto});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {produto, produtoTexto});

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        numeroOp.setBorder(javax.swing.BorderFactory.createTitledBorder("Nº OP"));

        cliente.setBorder(javax.swing.BorderFactory.createTitledBorder("NOME DO CLIENTE"));

        dataEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder("DATA DE ENTRADA"));

        dataPrevEntrega.setBorder(javax.swing.BorderFactory.createTitledBorder("DATA PREV ENTREGA"));
        dataPrevEntrega.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dataPrevEntregaMouseClicked(evt);
            }
        });
        dataPrevEntrega.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataPrevEntregaPropertyChange(evt);
            }
        });

        observacoesOrcamento.setColumns(20);
        observacoesOrcamento.setLineWrap(true);
        observacoesOrcamento.setRows(5);
        observacoesOrcamento.setBorder(javax.swing.BorderFactory.createTitledBorder("OBSERVAÇÕES DO ORÇAMENTO"));
        jScrollPane2.setViewportView(observacoesOrcamento);

        tipoTrabalho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE...", "OFFSET", "DIGITAL", "TIPOGRAFIA", "ACABAMENTO" }));
        tipoTrabalho.setBorder(javax.swing.BorderFactory.createTitledBorder("TIPO DE TRABALHO"));
        tipoTrabalho.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoTrabalhoItemStateChanged(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ADMINISTRAÇÃO DE DATAS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "PRÉ-IMPRESSÃO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        primeira_prova.setText("1ª PROVA DIV CMCL");
        primeira_prova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeira_provaActionPerformed(evt);
            }
        });

        segunda_prova.setText("2ª PROVA DIV CMCL");
        segunda_prova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segunda_provaActionPerformed(evt);
            }
        });

        terceira_prova.setText("3ª PROVA DIV CMCL");
        terceira_prova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                terceira_provaActionPerformed(evt);
            }
        });

        quarta_prova.setText("4ª PROVA DIV CMCL");
        quarta_prova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quarta_provaActionPerformed(evt);
            }
        });

        quinta_prova.setText("5ª PROVA DIV CMCL");
        quinta_prova.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quinta_provaActionPerformed(evt);
            }
        });

        primeiraProva.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        primeiraProva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        segundaProva.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        segundaProva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        terceiraProva.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        terceiraProva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        quartaProva.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        quartaProva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        quintaProva.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        quintaProva.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addComponent(quintaProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(terceiraProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(primeira_prova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(segunda_prova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(terceira_prova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quarta_prova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quinta_prova, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(primeiraProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(segundaProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(quartaProva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(primeira_prova)
                .addGap(2, 2, 2)
                .addComponent(primeiraProva, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(segunda_prova)
                .addGap(2, 2, 2)
                .addComponent(segundaProva, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(terceira_prova)
                .addGap(1, 1, 1)
                .addComponent(terceiraProva, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(quarta_prova)
                .addGap(2, 2, 2)
                .addComponent(quartaProva, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(quinta_prova)
                .addGap(2, 2, 2)
                .addComponent(quintaProva, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SEÇÃO TÉCNICA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        aprovacao_cliente.setText("APROVAÇÃO CLIENTE");
        aprovacao_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aprovacao_clienteActionPerformed(evt);
            }
        });

        entrega_final.setText("ENTREGA FINAL");
        entrega_final.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrega_finalActionPerformed(evt);
            }
        });

        imposta_dir.setText("IMPOSTA (DIREÇÃO)");
        imposta_dir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imposta_dirActionPerformed(evt);
            }
        });

        aprovacaoCliente.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        aprovacaoCliente.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        entregaFinal.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        entregaFinal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        impostaDirecao.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        impostaDirecao.setForeground(new java.awt.Color(255, 0, 51));
        impostaDirecao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        envioDivisaoComercial.setText("ENVIO EXPEDIÇÃO");
        envioDivisaoComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envioDivisaoComercialActionPerformed(evt);
            }
        });

        envioDivCmcl.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        envioDivCmcl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(entregaFinal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(impostaDirecao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(envioDivisaoComercial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(imposta_dir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entrega_final, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aprovacao_cliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(aprovacaoCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(envioDivCmcl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(aprovacao_cliente)
                .addGap(2, 2, 2)
                .addComponent(aprovacaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entrega_final)
                .addGap(2, 2, 2)
                .addComponent(entregaFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imposta_dir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(impostaDirecao, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(envioDivisaoComercial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(envioDivCmcl, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SEÇÃO DE PRODUÇÃO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 11))); // NOI18N

        entrada_offset.setText("ENTRADA NA OFFSET");
        entrada_offset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrada_offsetActionPerformed(evt);
            }
        });

        entrada_tipografia.setText("ENTRADA NA TIPOGRAFIA");
        entrada_tipografia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrada_tipografiaActionPerformed(evt);
            }
        });

        entrada_acabamento.setText("ENTRADA NO ACABAMENTO");
        entrada_acabamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrada_acabamentoActionPerformed(evt);
            }
        });

        entradaOffset.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        entradaOffset.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        entradaTipografia.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        entradaTipografia.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        entradaAcabamento.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        entradaAcabamento.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(entradaTipografia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entradaAcabamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entradaOffset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entrada_acabamento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entrada_tipografia, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(entrada_offset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(entrada_offset)
                .addGap(4, 4, 4)
                .addComponent(entradaOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(entrada_tipografia)
                .addGap(2, 2, 2)
                .addComponent(entradaTipografia, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(entrada_acabamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entradaAcabamento, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(40, 40, 40))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        orcamentoBase.setBorder(javax.swing.BorderFactory.createTitledBorder("Nº ORÇ"));
        orcamentoBase.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        operadorSecao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECIONE..." }));
        operadorSecao.setBorder(javax.swing.BorderFactory.createTitledBorder("OPERADOR/SEÇÃO"));
        operadorSecao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                operadorSecaoItemStateChanged(evt);
            }
        });

        statusOrdemProducao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "EM AVALIAÇÃO PELA SEÇ TÉCNICA", "ENCAMINHADO PARA PRÉ IMP", "DIAGRAMAÇÃO", "PRODUZINDO PROVA", "AGUARDANDO APR CLIENTE", "ENCAMINHADO PARA OFFSET", "ENCAMINHADO PARA TIPOGRAFIA", "ENCAMINHADO PARA ACABAMENTO", "EM FINALIZAÇÃO", "ENCAMINHADO PARA EXPEDIÇÃO" }));
        statusOrdemProducao.setBorder(javax.swing.BorderFactory.createTitledBorder("STATUS"));
        statusOrdemProducao.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusOrdemProducaoItemStateChanged(evt);
            }
        });

        codigoProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("CÓD PRODUTO"));
        codigoProduto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        descricaoProduto.setBorder(javax.swing.BorderFactory.createTitledBorder("DESCRIÇÃO DO PRODUTO"));

        statusAlteracoes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        statusAlteracoes.setForeground(new java.awt.Color(255, 0, 0));
        statusAlteracoes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusAlteracoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(numeroOp, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orcamentoBase, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataPrevEntrega, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(codigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(descricaoProduto))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(operadorSecao, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tipoTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(statusOrdemProducao, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(dataEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(orcamentoBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numeroOp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dataPrevEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descricaoProduto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(statusOrdemProducao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tipoTrabalho, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(operadorSecao, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAlteracoes, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100)
                .addComponent(statusProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {operadorSecao, statusOrdemProducao, tipoTrabalho});

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cliente, dataEntrada, dataPrevEntrega, numeroOp, orcamentoBase});

        visualizarOrdemProducao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/icons8_print_22px.png"))); // NOI18N
        visualizarOrdemProducao.setToolTipText("VISUALIZAR ORDEM DE PRODUÇÃO");
        visualizarOrdemProducao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visualizarOrdemProducaoActionPerformed(evt);
            }
        });

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/gravar.png"))); // NOI18N
        btnGravar.setToolTipText("GRAVAR ALTERAÇÕES");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });

        qtdDiasOp.setBackground(new java.awt.Color(0, 0, 0));
        qtdDiasOp.setForeground(new java.awt.Color(255, 255, 255));
        qtdDiasOp.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("QUANTIDADE DE DIAS PARA ENTREGA PREVISTA:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(13, 13, 13)
                        .addComponent(qtdDiasOp, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(visualizarOrdemProducao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGravar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(visualizarOrdemProducao, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                            .addComponent(btnGravar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(qtdDiasOp, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                        .addGap(8, 8, 8)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnGravar, jLabel11, qtdDiasOp, visualizarOrdemProducao});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaMouseClicked

        limpa();
        numOp = (int) tabelaConsulta.getValueAt(tabelaConsulta.getSelectedRow(), 0);
        atualiza();
        statusAlteracoes.setText("");
    }//GEN-LAST:event_tabelaConsultaMouseClicked

    private void codOpFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codOpFiltroItemStateChanged
        codOpTexto.setEnabled(true);
        dataEntregaTexto.setEnabled(false);
        mesEmissaoSelecionar.setEnabled(false);
        anoEmissaoSelecionar.setEnabled(false);
        mesEntregaSelecionar.setEnabled(false);
        anoEntregaSelecionar.setEnabled(false);
        statusTexto.setEnabled(false);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_codOpFiltroItemStateChanged

    private void codOpFiltroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_codOpFiltroMouseClicked

    }//GEN-LAST:event_codOpFiltroMouseClicked

    private void mesEmissaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesEmissaoItemStateChanged
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(false);
        mesEmissaoSelecionar.setEnabled(true);
        anoEmissaoSelecionar.setEnabled(true);
        mesEntregaSelecionar.setEnabled(false);
        anoEntregaSelecionar.setEnabled(false);
        statusTexto.setEnabled(false);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_mesEmissaoItemStateChanged

    private void mesEmissaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesEmissaoMouseClicked

    }//GEN-LAST:event_mesEmissaoMouseClicked

    private void statusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusItemStateChanged
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(false);
        mesEmissaoSelecionar.setEnabled(false);
        anoEmissaoSelecionar.setEnabled(false);
        mesEntregaSelecionar.setEnabled(false);
        anoEntregaSelecionar.setEnabled(false);
        statusTexto.setEnabled(true);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_statusItemStateChanged

    private void statusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusMouseClicked
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(false);
        statusTexto.setEnabled(true);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_statusMouseClicked

    private void dataEntregaTextoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataEntregaTextoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEntregaTextoMouseClicked

    private void aplicarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aplicarTextoActionPerformed
        realTime = false;
        new Thread("Aplicar filtro op") {
            @Override
            public void run() {

                loading.setText("CARREGANDO...");
                loading.setVisible(true);

                try {
                    DefaultTableModel modeloTabela = (DefaultTableModel) tabelaConsulta.getModel();
                    modeloTabela.setNumRows(0);
                    if (codOpFiltro.isSelected() == true) {
                        if (codOpTexto.getValue() == null) {
                            JOptionPane.showMessageDialog(null, "DIGITE O CÓDIGO DA ORDEM DE PRODUÇÃO.");
                            return;
                        } else {
                            for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro((Long) codOpTexto.getValue(), null, null, null, null, null, null, null)) {
                                modeloTabela.addRow(new Object[]{
                                    op.getCodigo(),
                                    Controle.dataPadrao.format(op.getDataEntrega()),
                                    op.getStatus(),
                                    ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                                });
                            }
                        }
                    } else if (status.isSelected() == true) {
                        for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro(0l, null, null, null, null, null, statusTexto.getSelectedItem().toString(), null)) {
                            modeloTabela.addRow(new Object[]{
                                op.getCodigo(),
                                Controle.dataPadrao.format(op.getDataEntrega()),
                                op.getStatus(),
                                ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                            });
                        }
                    } else if (produto.isSelected() == true) {
                        if (produtoTexto.getText().equals("")) {
                            JOptionPane.showMessageDialog(null, "ESCREVA O NOME DO PRODUTO.");
                            return;
                        }
                        for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro(0l, null, null, null, null, null, null, produtoTexto.getText())) {
                            modeloTabela.addRow(new Object[]{
                                op.getCodigo(),
                                Controle.dataPadrao.format(op.getDataEntrega()),
                                op.getStatus(),
                                ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                            });
                        }
                    } else if (mesEmissao.isSelected()) {
                        for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro(0l,
                                null,
                                Integer.toString(mesEmissaoSelecionar.getMonth() + 1),
                                Integer.toString(anoEmissaoSelecionar.getYear()),
                                null,
                                null,
                                null,
                                null)) {

                            modeloTabela.addRow(new Object[]{
                                op.getCodigo(),
                                Controle.dataPadrao.format(op.getDataEntrega()),
                                op.getStatus(),
                                ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                            });

                        }
                    } else if (mesEntrega.isSelected()) {
                        for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro(0l,
                                null,
                                null,
                                null,
                                Integer.toString(mesEntregaSelecionar.getMonth() + 1),
                                Integer.toString(anoEntregaSelecionar.getYear()),
                                null,
                                null)) {

                            modeloTabela.addRow(new Object[]{
                                op.getCodigo(),
                                Controle.dataPadrao.format(op.getDataEntrega()),
                                op.getStatus(),
                                ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                            });

                        }
                    } else if (dataEntrega.isSelected()) {
                        for (OrdemProducao op : TelaAcompanhamentoDAO.retornaFiltro(0l, dataEntregaTexto.getDate(),
                                null, null, null, null, null, null)) {
                            modeloTabela.addRow(new Object[]{
                                op.getCodigo(),
                                Controle.dataPadrao.format(op.getDataEntrega()),
                                op.getStatus(),
                                ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto())
                            });
                        }
                    }
                    codOpTexto.setValue(null);
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
                loading.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_aplicarTextoActionPerformed

    private void tempoRealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tempoRealActionPerformed
        realTime = true;
        refresh();
    }//GEN-LAST:event_tempoRealActionPerformed

    private void produtoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_produtoItemStateChanged
        statusTexto.setEnabled(false);
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(false);
        mesEmissaoSelecionar.setEnabled(false);
        anoEmissaoSelecionar.setEnabled(false);
        mesEntregaSelecionar.setEnabled(false);
        anoEntregaSelecionar.setEnabled(false);
        produtoTexto.setEnabled(true);
    }//GEN-LAST:event_produtoItemStateChanged

    private void produtoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_produtoMouseClicked

    }//GEN-LAST:event_produtoMouseClicked

    private void dataEntregaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_dataEntregaItemStateChanged
        statusTexto.setEnabled(false);
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(true);
        mesEmissaoSelecionar.setEnabled(false);
        anoEmissaoSelecionar.setEnabled(false);
        mesEntregaSelecionar.setEnabled(false);
        anoEntregaSelecionar.setEnabled(false);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_dataEntregaItemStateChanged

    private void dataEntregaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataEntregaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_dataEntregaMouseClicked

    private void mesEntregaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesEntregaItemStateChanged
        statusTexto.setEnabled(false);
        codOpTexto.setEnabled(false);
        dataEntregaTexto.setEnabled(false);
        mesEmissaoSelecionar.setEnabled(false);
        anoEmissaoSelecionar.setEnabled(false);
        mesEntregaSelecionar.setEnabled(true);
        anoEntregaSelecionar.setEnabled(true);
        produtoTexto.setEnabled(false);
    }//GEN-LAST:event_mesEntregaItemStateChanged

    private void mesEntregaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesEntregaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_mesEntregaMouseClicked

    private void mesEntregaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mesEntregaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mesEntregaActionPerformed

    private void dataPrevEntregaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dataPrevEntregaMouseClicked

    }//GEN-LAST:event_dataPrevEntregaMouseClicked

    private void dataPrevEntregaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataPrevEntregaPropertyChange

    }//GEN-LAST:event_dataPrevEntregaPropertyChange

    private void tipoTrabalhoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoTrabalhoItemStateChanged

    }//GEN-LAST:event_tipoTrabalhoItemStateChanged

    private void primeira_provaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeira_provaActionPerformed
        botao = "primeira_prova";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO 1ª PROVA");
    }//GEN-LAST:event_primeira_provaActionPerformed

    private void segunda_provaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segunda_provaActionPerformed
        botao = "segunda_prova";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO 2ª PROVA");
    }//GEN-LAST:event_segunda_provaActionPerformed

    private void terceira_provaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_terceira_provaActionPerformed
        botao = "terceira_prova";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO 3ª PROVA");
    }//GEN-LAST:event_terceira_provaActionPerformed

    private void quarta_provaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quarta_provaActionPerformed
        botao = "quarta_prova";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO 4ª PROVA");
    }//GEN-LAST:event_quarta_provaActionPerformed

    private void quinta_provaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quinta_provaActionPerformed
        botao = "quinta_prova";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO 5ª PROVA");
    }//GEN-LAST:event_quinta_provaActionPerformed

    private void aprovacao_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aprovacao_clienteActionPerformed
        botao = "aprovacao_cliente";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE APROVAÇÃO DO CLIENTE");
    }//GEN-LAST:event_aprovacao_clienteActionPerformed

    private void entrega_finalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrega_finalActionPerformed
        botao = "entrega_final";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENTREGA FINAL");
    }//GEN-LAST:event_entrega_finalActionPerformed

    private void imposta_dirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imposta_dirActionPerformed
        botao = "imposta_direcao";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA IMPOSTA PELA DIREÇÃO");
    }//GEN-LAST:event_imposta_dirActionPerformed

    private void envioDivisaoComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envioDivisaoComercialActionPerformed
        botao = "envio_div_cmcl";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENVIO PARA DIV COMERCIAL");
    }//GEN-LAST:event_envioDivisaoComercialActionPerformed

    private void entrada_offsetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrada_offsetActionPerformed
        botao = "entrada_offset";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENTRADA NA OFFSET");
    }//GEN-LAST:event_entrada_offsetActionPerformed

    private void entrada_tipografiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrada_tipografiaActionPerformed
        botao = "entrada_tipografia";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENTRADA NA TIPOGRAFIA");
    }//GEN-LAST:event_entrada_tipografiaActionPerformed

    private void entrada_acabamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrada_acabamentoActionPerformed
        botao = "entrada_acabamento";
        gj.abrirJanelas(EscolhaDatas.getInstancia(), "DEFINIR DATA DE ENTRADA NO ACABAMENTO");
    }//GEN-LAST:event_entrada_acabamentoActionPerformed

    private void visualizarOrdemProducaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visualizarOrdemProducaoActionPerformed
        new Thread("Visualizar OP") {
            @Override
            public void run() {
                loading.setVisible(true);
                loading.setText("GERANDO PDF...");

                OrdemProducao.gerarPdfOp(Integer.parseInt(numeroOp.getValue().toString()),
                        Integer.parseInt(orcamentoBase.getValue().toString()),
                        (byte) 1,
                        null);
                Producao.loadingHide();

                loading.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_visualizarOrdemProducaoActionPerformed

    private void operadorSecaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_operadorSecaoItemStateChanged

    }//GEN-LAST:event_operadorSecaoItemStateChanged

    private void statusOrdemProducaoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusOrdemProducaoItemStateChanged

    }//GEN-LAST:event_statusOrdemProducaoItemStateChanged

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        new Thread() {
            @Override
            public void run() {
                loading.setVisible(true);
                loading.setText("SALVANDO...");

                salvaAlteracoes();

                loading.setVisible(false);
            }
        }.start();
    }//GEN-LAST:event_btnGravarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JYearChooser anoEmissaoSelecionar;
    private com.toedter.calendar.JYearChooser anoEntregaSelecionar;
    private javax.swing.JButton aplicarTexto;
    public static javax.swing.JLabel aprovacaoCliente;
    public static javax.swing.JButton aprovacao_cliente;
    private javax.swing.JButton btnGravar;
    private javax.swing.ButtonGroup buttonGroup1;
    public static javax.swing.JTextField cliente;
    private javax.swing.JRadioButton codOpFiltro;
    private javax.swing.JFormattedTextField codOpTexto;
    public static javax.swing.JFormattedTextField codigoProduto;
    public static javax.swing.JTextField dataEntrada;
    private javax.swing.JRadioButton dataEntrega;
    private com.toedter.calendar.JDateChooser dataEntregaTexto;
    public static com.toedter.calendar.JDateChooser dataPrevEntrega;
    public static javax.swing.JTextField descricaoProduto;
    public static javax.swing.JLabel entradaAcabamento;
    public static javax.swing.JLabel entradaOffset;
    public static javax.swing.JLabel entradaTipografia;
    public static javax.swing.JButton entrada_acabamento;
    public static javax.swing.JButton entrada_offset;
    public static javax.swing.JButton entrada_tipografia;
    public static javax.swing.JLabel entregaFinal;
    public static javax.swing.JButton entrega_final;
    public static javax.swing.JLabel envioDivCmcl;
    public static javax.swing.JButton envioDivisaoComercial;
    public static javax.swing.JLabel impostaDirecao;
    public static javax.swing.JButton imposta_dir;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton mesEmissao;
    private com.toedter.calendar.JMonthChooser mesEmissaoSelecionar;
    private javax.swing.JRadioButton mesEntrega;
    private com.toedter.calendar.JMonthChooser mesEntregaSelecionar;
    public static javax.swing.JFormattedTextField numeroOp;
    public static javax.swing.JTextArea observacoesOrcamento;
    public static javax.swing.JComboBox<String> operadorSecao;
    public static javax.swing.JFormattedTextField orcamentoBase;
    public static javax.swing.JLabel primeiraProva;
    public static javax.swing.JButton primeira_prova;
    private javax.swing.JRadioButton produto;
    private javax.swing.JTextField produtoTexto;
    public static javax.swing.JFormattedTextField qtdDiasOp;
    public static javax.swing.JLabel quartaProva;
    public static javax.swing.JButton quarta_prova;
    public static javax.swing.JLabel quintaProva;
    public static javax.swing.JButton quinta_prova;
    public static javax.swing.JLabel segundaProva;
    public static javax.swing.JButton segunda_prova;
    private javax.swing.JRadioButton status;
    public static javax.swing.JLabel statusAlteracoes;
    public static javax.swing.JComboBox<String> statusOrdemProducao;
    private javax.swing.JLabel statusProgresso;
    private javax.swing.JComboBox<String> statusTexto;
    public static javax.swing.JTable tabelaConsulta;
    private javax.swing.JButton tempoReal;
    public static javax.swing.JLabel terceiraProva;
    public static javax.swing.JButton terceira_prova;
    public static javax.swing.JComboBox<String> tipoTrabalho;
    public static javax.swing.JButton visualizarOrdemProducao;
    // End of variables declaration//GEN-END:variables

    private void estado1() {
        numeroOp.setEditable(false);
        cliente.setEditable(false);
        dataEntrada.setEditable(false);
        dataPrevEntrega.setEnabled(false);
        observacoesOrcamento.setEditable(false);
        tipoTrabalho.setEnabled(false);
        operadorSecao.setEnabled(false);
        primeira_prova.setEnabled(false);
        segunda_prova.setEnabled(false);
        terceira_prova.setEnabled(false);
        quarta_prova.setEnabled(false);
        quinta_prova.setEnabled(false);
        aprovacao_cliente.setEnabled(false);
        entrega_final.setEnabled(false);
        imposta_dir.setEnabled(false);
        entrada_offset.setEnabled(false);
        entrada_tipografia.setEnabled(false);
        entrada_acabamento.setEnabled(false);
        envioDivisaoComercial.setEnabled(false);
        orcamentoBase.setEnabled(false);
        visualizarOrdemProducao.setEnabled(false);
        statusOrdemProducao.setEnabled(false);
        codigoProduto.setEditable(false);
        descricaoProduto.setEditable(false);
        statusAlteracoes.setText("");
    }

    public static void estado2() {
        dataPrevEntrega.setEnabled(true);
        tipoTrabalho.setEnabled(true);
        primeira_prova.setEnabled(true);
        segunda_prova.setEnabled(true);
        terceira_prova.setEnabled(true);
        quarta_prova.setEnabled(true);
        quinta_prova.setEnabled(true);
        aprovacao_cliente.setEnabled(true);
        entrega_final.setEnabled(true);
        imposta_dir.setEnabled(true);
        entrada_offset.setEnabled(true);
        entrada_tipografia.setEnabled(true);
        entrada_acabamento.setEnabled(true);
        envioDivisaoComercial.setEnabled(true);
        operadorSecao.setEnabled(true);
        visualizarOrdemProducao.setEnabled(true);
        statusOrdemProducao.setEnabled(true);
    }

    private static void atualiza() {
        new Thread("Atualiza OP") {
            @Override
            public void run() {
                try {
                    /**
                     * Recupera as informações da ordem de produção
                     */
                    OrdemProducao op = OrdemProducaoDAO.retornaDadosOp(numOp);

                    /**
                     * Preenche os campos da GUI
                     */
                    numeroOp.setValue(numOp);
                    orcamentoBase.setValue(OrdemProducaoDAO.retornaOrcamentoBase(numOp));
                    cliente.setText(ClienteDAO.retornaNomeCliente(op.getCodCliente(),
                            (byte) op.getTipoPessoa()));
                    dataEntrada.setText(Controle.dataPadrao.format(op.getDataEmissao()));
                    dataPrevEntrega.setDate(op.getDataEntrega());
                    observacoesOrcamento.setText(op.getDescricao());
                    codigoProduto.setText(String.valueOf(op.getCodProduto()));

                    /**
                     * Preenche as datas
                     */
                    if (op.getData1aProva() != null) {
                        primeiraProva.setText(Controle.dataPadrao.format(op.getData1aProva()));
                    }

                    if (op.getData2aProva() != null) {
                        segundaProva.setText(Controle.dataPadrao.format(op.getData2aProva()));
                    }

                    if (op.getData3aProva() != null) {
                        terceiraProva.setText(Controle.dataPadrao.format(op.getData3aProva()));
                    }

                    if (op.getData4aProva() != null) {
                        quartaProva.setText(Controle.dataPadrao.format(op.getData4aProva()));
                    }

                    if (op.getData5aProva() != null) {
                        quintaProva.setText(Controle.dataPadrao.format(op.getData5aProva()));
                    }

                    if (op.getDataAprCliente() != null) {
                        aprovacaoCliente.setText(Controle.dataPadrao.format(op.getDataAprCliente()));
                    }

                    if (op.getDataEntFinal() != null) {
                        entregaFinal.setText(Controle.dataPadrao.format(op.getDataEntFinal()));
                    }

                    if (op.getDataImpDir() != null) {
                        impostaDirecao.setText(Controle.dataPadrao.format(op.getDataImpDir()));
                    }

                    if (op.getDataEntOffset() != null) {
                        entradaOffset.setText(Controle.dataPadrao.format(op.getDataEntOffset()));
                    }

                    if (op.getDataEntTipografia() != null) {
                        entradaTipografia.setText(Controle.dataPadrao.format(op.getDataEntTipografia()));
                    }

                    if (op.getDataEntAcabamento() != null) {
                        entradaAcabamento.setText(Controle.dataPadrao.format(op.getDataEntAcabamento()));
                    }

                    if (op.getDataEnvioDivCmcl() != null) {
                        envioDivCmcl.setText(Controle.dataPadrao.format(op.getDataEnvioDivCmcl()));
                    }

                    /**
                     * Retorna atendentes
                     */
                    operadorSecao.removeAllItems();
                    operadorSecao.addItem("SELECIONE...");

                    for (FuncionarioBEAN funcionario : FuncionarioDAO.retornaAtendentes((byte) 0)) {
                        operadorSecao.addItem(funcionario.getNomeAtendente());
                    }
                    if (op.getOpSecao() != null) {
                        operadorSecao.setSelectedItem(op.getOpSecao());
                    } else {
                        operadorSecao.setSelectedIndex(0);
                    }

                    /**
                     * Define o estado da ordem de produção
                     */
                    if (op.getStatus().toString().equals("CANCELADA")) {
                        statusOrdemProducao.addItem("CANCELADA");
                    } else {
                        statusOrdemProducao.removeItem("CANCELADA");
                    }
                    statusOrdemProducao.setSelectedItem(op.getStatus());

                    /**
                     * Calcula os dias para a entrega
                     */
                    calculaDias(new Date(), op.getDataEntrega());

                    /**
                     * Preenche o código do produto
                     */
                    if (op.getCodProduto() != 0) {
                        descricaoProduto.setText(ProdutoDAO.retornaDescricaoProduto(op.getCodProduto(), op.getTipoProduto()));
                    } else {
                        descricaoProduto.setText("SERVIÇOS");
                    }

                    /**
                     * Define o tipo de trabalho
                     */
                    if (op.getTipoTrabalho() == null) {
                        tipoTrabalho.setSelectedIndex(0);
                    } else {
                        tipoTrabalho.setSelectedItem(op.getTipoTrabalho());
                    }

                    /**
                     * Define o estado da GUI
                     */
                    estado2();

                    /**
                     * Esconde a imagem de carregando
                     */
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                }
            }
        }.start();
    }

    public static void limpa() {
        numeroOp.setText("");
        cliente.setText("");
        dataEntrada.setText("");
        dataPrevEntrega.setDate(null);
        observacoesOrcamento.setText("");
        tipoTrabalho.setSelectedIndex(0);
        primeiraProva.setText("");
        segundaProva.setText("");
        terceiraProva.setText("");
        quartaProva.setText("");
        quintaProva.setText("");
        aprovacaoCliente.setText("");
        entregaFinal.setText("");
        impostaDirecao.setText("");
        envioDivCmcl.setText("");
        entradaOffset.setText("");
        entradaTipografia.setText("");
        entradaAcabamento.setText("");

    }

    private static void atualizaTabela() {
        try {
            /**
             * Define o modelo da tabela acompanhamento
             */
            DefaultTableModel mdlAcompanhamento = (DefaultTableModel) tabelaConsulta.getModel();
            mdlAcompanhamento.setNumRows(0);

            /**
             * Atualiza a tabela
             */
            for (TelaAcompanhamentoBEAN acompanhamento : TelaAcompanhamentoDAO.refreshTabela()) {
                mdlAcompanhamento.addRow(new Object[]{
                    acompanhamento.getNumero(),
                    Controle.dataPadrao.format(acompanhamento.getDataEntrega()),
                    acompanhamento.getStatus(),
                    acompanhamento.getDescricaoProduto()});
            }

            /**
             * Colore a tabela
             */
            OrdemProducao.corTabela(tabelaConsulta, (byte) 1);
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }

    public void refresh() {
        DefaultTableModel modeloAcompanhamento = (DefaultTableModel) tabelaConsulta.getModel();
        new Thread("Refresh tela acompanhamento") {
            @Override
            public void run() {
                while (realTime) {
                    try {
                        modeloAcompanhamento.setNumRows(0);
                        for (TelaAcompanhamentoBEAN telaAcompanhamentoBEAN : TelaAcompanhamentoDAO.refreshTabela()) {
                            modeloAcompanhamento.addRow(new Object[]{
                                telaAcompanhamentoBEAN.getNumero(),
                                Controle.dataPadrao.format(telaAcompanhamentoBEAN.getDataEntrega()),
                                telaAcompanhamentoBEAN.getStatus(),
                                telaAcompanhamentoBEAN.getDescricaoProduto()});
                        }
                        OrdemProducao.corTabela(tabelaConsulta, (byte) 1);
                        Thread.sleep(300000);
                    } catch (SQLException | InterruptedException ex) {
                        EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                        EnvioExcecao.envio();
                    }

                }
            }
        }.start();
    }

    public static void calculaDias(Date data1, Date data2) {
        Controle.dataPadrao.setLenient(false);

        if (statusOrdemProducao.getSelectedItem().toString().equals("ENCAMINHADO PARA EXPEDIÇÃO")) {
            qtdDiasOp.setBackground(Color.GREEN);
            qtdDiasOp.setForeground(Color.black);
            qtdDiasOp.setValue(0);
        } else {
            long dt = (data2.getTime() - data1.getTime()) + 3600000;
            dt = dt / 86400000L;
            qtdDiasOp.setValue(dt);
            if (dt > 0) {
                qtdDiasOp.setBackground(Color.GREEN);
                qtdDiasOp.setForeground(Color.black);
            }
            if (dt <= 0) {
                qtdDiasOp.setBackground(Color.red);
                qtdDiasOp.setForeground(Color.black);
            }
        }
    }

    public static void salvaAlteracoes() {
        try {

            OrdemProducao op = new OrdemProducao();

            op.setCodigo((int) numeroOp.getValue());
            op.setDataEntrega(dataPrevEntrega.getDate());

            op.setIndEntPrazo(0);
            op.setIndEntErro(0);

            if (tipoTrabalho.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "SELECIONE O TIPO DE TRABALHO!");
                return;
            } else {
                op.setTipoTrabalho(tipoTrabalho.getSelectedItem().toString());
            }

            if (operadorSecao.getSelectedItem().equals("SELECIONE...")) {
                JOptionPane.showMessageDialog(null, "SELECIONE O OPERADOR/SEÇÃO!");
                return;
            } else {
                op.setOpSecao(operadorSecao.getSelectedItem().toString());
            }

            op.setStatus(statusOrdemProducao.getSelectedItem().toString());

            TelaAcompanhamentoDAO.atualizaDadosOp(op);

            if (botao != null) {
                Connection con = ConnectionFactory.getConnection();
                PreparedStatement stmt = null;
                Date date = new Date();
                date = EscolhaDatas.calendario.getDate();
                try {
                    if (TelaAcompanhamento.botao.equals("primeira_prova")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_1a_prova = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("segunda_prova")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_2a_prova = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("terceira_prova")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_3a_prova = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("quarta_prova")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_4a_prova = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("quinta_prova")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_5a_prova = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("aprovacao_cliente")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_apr_cliente = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("entrega_final")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_ent_final = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("imposta_direcao")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_imp_dir = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("entrada_offset")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_ent_offset = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("entrada_tipografia")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_ent_tipografia = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("entrada_acabamento")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_ent_acabamento = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    if (TelaAcompanhamento.botao.equals("envio_div_cmcl")) {
                        stmt = con.prepareStatement("UPDATE tabela_ordens_producao SET data_envio_div_cmcl = ? WHERE cod = ?");
                        stmt.setDate(1, new java.sql.Date(EscolhaDatas.calendario.getDate().getTime()));
                        stmt.setInt(2, (int) TelaAcompanhamento.numeroOp.getValue());
                    }
                    stmt.executeUpdate();
                } catch (SQLException ex) {
                    EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
                    EnvioExcecao.envio();
                    return;
                } finally {
                    ConnectionFactory.closeConnection(con, stmt);
                    botao = null;
                }
                atualiza();
                atualizaTabela();
            }

            statusAlteracoes.setText("SALVO PELA ÚLTIMA VEZ ÀS "
                    + Controle.horaPadrao.format(new Date()));
        } catch (SQLException ex) {
            EnvioExcecao envioExcecao = new EnvioExcecao(Controle.getDefaultGj(), ex);
            EnvioExcecao.envio();
        }
    }
}
